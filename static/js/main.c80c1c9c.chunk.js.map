{"version":3,"sources":["components/appVersion.js","dialog/AboutDialog.js","dialog/HelpDialog.js","components/AppBar.js","components/Schluessel.js","components/HeaderContext.js","components/ProtokollKopf.js","components/helperFunctions.js","components/SignatureBox.js","components/Signature.js","components/Inventar.js","components/IconBox.js","components/WebcamDialog.js","components/ImageGrid.js","components/Zimmer.js","components/ZimmerListe.js","App.js","index.js"],"names":["AppVersion","AboutDialog","props","React","Dialog","onClose","closeFunction","open","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","HelpDialog","IosShare","ButtonAppBar","_React$useState","_React$useState2","_slicedToArray","setOpen","_React$useState3","_React$useState4","anchorEl","setAnchorEl","_React$useState5","_React$useState6","aboutDialog","setAboutDialog","_React$useState7","_React$useState8","helpDialog","setHelpDialog","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","mr","e","event","currentTarget","MenuIcon","Menu","MenuListProps","MenuItem","Typography","variant","component","Schluessel","Paper","p","m","display","flexDirection","maxWidth","elevation","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","label","required","fullWidth","type","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","House","DoorFront","MarkunreadMailbox","ElectricalServices","HeaderContext","createContext","HeaderDispatchContext","headerContextData","mieter","vermieter","mieterEmail","dataReducer","headerContext","dispatch","action","_objectSpread","value","ProtokollKopf","useContext","_useState","useState","currentDateTime","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","concat","getCurrentDate","_useState2","dateTime","_useState3","_useState4","appartmentName","setAppartmentName","console","log","document","title","createElement","name","autoComplete","onChange","target","Apartment","CalendarToday","Contacts","Person","AddLocation","Email","ize","Group","SignatureBox","sigRef","useRef","style","alignItems","justifyContent","margin","background","SignatureCanvas","penColor","ref","throttle","clearOnResize","canvasProps","width","height","className","onEnd","current","clear","DeleteOutline","paddingTop","Signature","flexWrap","labels","1","2","3","4","5","Inventar","setValue","setLabel","error","setError","icon","FiberManualRecord","fontSize","borderColor","iten","paddingLeft","removeFnc","idx","Delete","Boolean","helperText","readOnly","checkFunction","checkLabel","trim","Rating","precision","defaultValue","emptyIcon","newValue","marginLeft","IconBox","backgroundColor","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","WebcamDialog","_ref","cameraWindow","_ref$open","onCapture","webcamRef","selectedCamera","setSelectedCamera","buttonDisabled","setButtonDisabled","_useState5","_useState6","cameras","setCameras","useEffect","_ref2","_asyncToGenerator","_callee","devices","videoDevices","deviceIds","_context","navigator","mediaDevices","getUserMedia","audio","video","enumerateDevices","map","device","filter","kind","deviceId","t0","apply","arguments","getCameras","Webcam","screenshotFormat","videoConstraints","NoPhotography","padding","newCamera","indexOf","Cameraswitch","CloseIcon","imageSrc","getScreenshot","setTimeout","disabled","startIcon","PhotoCameraIcon","ImageGrid","images","deleteImageFnc","deleteFunction","gridRef","handleResize","grid","offsetWidth","gridTemplateColumns","window","addEventListener","removeEventListener","gap","image","index","src","alt","bottom","left","borderRadius","DeleteIcon","createInventoryObjectList","InventoryListe","element","Inventory_Zimmer","Inventory_GÃ¤ste_WC","_toConsumableArray","Inventory_WC","Inventory_Balkon","Inventory_Keller","Inventory_Abstellraum","Zimmer","inventory","Inventory","setInventory","showComment","setShowComment","showDialog","setShowDialog","setImages","containsInventory","retValue","removeInventory","tmpInventory","splice","JSON","stringify","setInventoryValue","localList","handleFoldComponent","Visibility","marginRight","VisibilityOff","md","Gradient","FormGroup","FormControlLabel","control","Switch","set","AddCircle","EditNote","Camera","multiline","rows","prevImages","updatedImages","ZimmerListe","sonstiges","PrintApp","componentRef","_useReducer","useReducer","_useReducer2","headerData","Provider","App","ReactToPrint","content","trigger","marginBottom","PrintOutlined","_React$PureComponent","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_createClass","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c80c1c9c.chunk.js","sourcesContent":["export const AppVersion = \"0.1.15\";\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport {AppVersion} from \"../components/appVersion\";\r\n\r\nexport default function AboutDialog(props) {\r\n\r\n    return (\r\n            <Dialog\r\n                onClose={props.closeFunction}\r\n                open={true}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Ãber dieses Programm\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Das Formular ist aus dem Wunsch heraus entstanden ein digitales Formular fÃ¼r\r\n                        die Wohnungsabnahme zu nutzen. Mit mÃ¶glichst wenig Aufwand soll der Zustand\r\n                        einer Immobilien Vorort rechtssicher dokumentiert werden.\r\n                        <p/>\r\n                        Das Formula ist fÃ¼r Mietwohnungen angepasst, kann aber einfach angepasst\r\n                        werden. Feedback gerne unter michael.carell@web.de<p/>\r\n                        Bitte die Versionnummer mit angeben, da ich hÃ¤ufig daran herumschraube.\r\n                        <p/>\r\n                        Version: {AppVersion}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.closeFunction} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n    );\r\n}","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport {IosShare, Share} from \"@mui/icons-material\";\r\n\r\nexport default function HelpDialog(props) {\r\n\r\n    return (\r\n            <Dialog\r\n                onClose={props.closeFunction}\r\n                open={true}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Hilfe\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <bold>Drucken</bold><p/>\r\n                        Sie kÃ¶nnen das Dokument nicht direkt versenden. Sie mÃ¼ssen es Drucken und\r\n                        dann Ã¼ber die Druckfunktion ihres MobilgerÃ¤tes \"teilen\". Das geht auf den\r\n                        iPhone / iPad wie folgt:\r\n                        <ol>\r\n                            <li>WÃ¤hlen Sie am Ende des Formulars den Knopf Drucken. Das Dokument wird dann vorbereitet und die EMail Adresse des Mieters\r\n                            in die Zwischenablage kopiert</li>\r\n                            <li>Im Drucken Dialog wÃ¤hlen Sie die Teilen Funktion (<IosShare/>)</li>\r\n                            <li>WÃ¤hlen Sie die EMail App aus</li>\r\n                            <li>Kopieren Sie die EMail Adresse des EmpfÃ¤ngers aus der Zwischenablage in das EmpfÃ¤nger Feld.</li>\r\n                            <li>Und jetzt noch versenden ...</li>\r\n                        </ol>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.closeFunction} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n    );\r\n}","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Menu, MenuItem} from \"@mui/material\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport {AppVersion} from \"./appVersion\";\r\nimport AboutDialog from \"../dialog/AboutDialog\";\r\nimport HelpDialog from \"../dialog/HelpDialog\";\r\n\r\n\r\nexport default function ButtonAppBar(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState( null );\r\n    const [aboutDialog, setAboutDialog] = React.useState( false );\r\n    const [helpDialog, setHelpDialog] = React.useState( false );\r\n\r\n    function handleOpenMenuItem(event, item) {\r\n        setOpen(true);\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    function handleCloseMenuItem(event, item) {\r\n        setOpen(false);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2 }}\r\n                        onClick={(e) => handleOpenMenuItem(e, 1)}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"basic-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={open}\r\n                        onClose={(e) => handleCloseMenuItem(e, 1)}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'basic-button',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={(e) => setHelpDialog(true)}>Hilfe</MenuItem>\r\n                        <MenuItem onClick={(e) => setAboutDialog(true)}>Ãber diese App</MenuItem>\r\n                    </Menu>\r\n\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        Wohnungszustandsprotokoll\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {aboutDialog && (<AboutDialog closeFunction={() => setAboutDialog(false)}/>)}\r\n            {helpDialog && (<HelpDialog closeFunction={() => setHelpDialog(false)}/>)}\r\n        </Box>\r\n    );\r\n}","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { DoorFront, ElectricalServices, House, MarkunreadMailbox} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\n\r\nexport default function Schluessel() {\r\n    return (\r\n        <React.Fragment>\r\n            <Paper sx={{\r\n                p: 2,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    SchlÃ¼ssel\r\n                </Typography>\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            id=\"hausschluessel\"\r\n                            label=\"HausschlÃ¼ssel\"\r\n                            required={true}\r\n                            fullWidth={true}\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <House />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            id=\"wohnungschluessel\"\r\n                            label=\"WohnungschlÃ¼ssel\"\r\n                            required={true}\r\n                            size=\"small\"\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <DoorFront />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"briefkastenschluessel\"\r\n                            label=\"Briefkasten\"\r\n                            required={true}\r\n                            size=\"small\"\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            variant=\"standard\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MarkunreadMailbox />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            id=\"hausanschlussschluessel\"\r\n                            label=\"Hausanschluss\"\r\n                            size=\"small\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ElectricalServices />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const HeaderContext = createContext(null);\r\nexport const HeaderDispatchContext = createContext(null);\r\n\r\nexport const headerContextData = {\r\n    mieter : '',\r\n    vermieter: '',\r\n    mieterEmail: ''\r\n};\r\n\r\nexport const dispatchType = { action: \"\", value: \"\" };\r\n\r\n\r\nexport function dataReducer(headerContext, dispatch) {\r\n    if( dispatch.action === \"mieter\")\r\n        return {...headerContext, mieter: dispatch.value };\r\n    else if( dispatch.action === \"mieterEmail\" )\r\n        return {...headerContext, mieterEmail: dispatch.value };\r\n    else\r\n        return {...headerContext, vermieter: dispatch.value };\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport {InputAdornment} from \"@mui/material\";\r\nimport {\r\n    AddLocation,\r\n    Apartment,\r\n    CalendarToday,\r\n    Contacts,\r\n    Email,\r\n    Gradient,\r\n    Group,\r\n    Person,\r\n    Place\r\n} from \"@mui/icons-material\";\r\n\r\nimport {HeaderDispatchContext} from \"./HeaderContext\";\r\nimport {useContext, useState} from \"react\";\r\nimport {getCurrentDate, getCurrentDateTime} from \"./helperFunctions\";\r\n\r\n\r\nexport default function ProtokollKopf() {\r\n\r\n    const dispatch = useContext(HeaderDispatchContext);\r\n    const [dateTime, setDateTime] = useState(getCurrentDate());\r\n    const [appartmentName, setAppartmentName] = useState(\"\");\r\n\r\n    console.log(\"A: '\" + appartmentName + \"'\");\r\n    if( appartmentName !== \"\")\r\n        document.title = \"Protokoll-\" + dateTime + \"-\" + appartmentName;\r\n    else\r\n        document.title = \"Protokoll-\" + dateTime;\r\n    return (\r\n\r\n        <Paper sx={{\r\n            p: 1,\r\n            m: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            maxWidth: \"100%\",\r\n            elevation: \"2\",\r\n        }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Wohnungsdaten\r\n            </Typography>\r\n\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        size=\"small\"\r\n                        required\r\n                        id=\"wohnung\"\r\n                        name=\"Wohnung\"\r\n                        label=\"Wohnung\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                        variant=\"standard\"\r\n                        onChange={(e) => {setAppartmentName(e.target.value)}}\r\n\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Apartment/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        size=\"small\"\r\n                        required\r\n                        id=\"datum\"\r\n                        name=\"Datum\"\r\n                        label=\"Datum\"\r\n                        type={\"date\"}\r\n                        value={dateTime}\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <CalendarToday/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"adresseWhg\"\r\n                        name=\"Adresse Wohnung\"\r\n                        label=\"Adresse Wohnung\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        size={\"small\"}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Contacts/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"mietername\"\r\n                        name=\"mietername\"\r\n                        label=\"Name Mieter\"\r\n                        fullWidth\r\n                        onChange={ (e) => {dispatch({action: \"mieter\", value: e.target.value})}}\r\n                        variant=\"standard\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Person/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"neueAdresse\"\r\n                        name=\"neueAdresse\"\r\n                        label=\"Neue Adresse\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        size=\"small\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <AddLocation/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"email_mieter\"\r\n                        name=\"email_mieter\"\r\n                        label=\"EMail Mieter\"\r\n                        onChange={ (e) => {dispatch({action: \"mieterEmail\", value: e.target.value})}}\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        size=\"small\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Email/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"teilneherVermieter\"\r\n                        name=\"vermieter\"\r\n                        label=\"Teilnehmer Vermieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        onChange={ (e) => {dispatch({action: \"vermieter\", value: e.target.value})}}\r\n                        ize=\"small\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Group/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}","export function getCurrentDateTime() {\r\n    const currentDateTime = new Date();\r\n    const year = currentDateTime.getFullYear();\r\n    const month = (currentDateTime.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = currentDateTime.getDate().toString().padStart(2, '0');\r\n    const hours = currentDateTime.getHours().toString().padStart(2, '0');\r\n    const minutes = currentDateTime.getMinutes().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n}\r\n\r\nexport function getCurrentDate() {\r\n    const currentDateTime = new Date();\r\n    const year = currentDateTime.getFullYear();\r\n    const month = (currentDateTime.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = currentDateTime.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n}","import React, {useRef} from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {DeleteOutline} from \"@mui/icons-material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\n\r\n\r\nexport default function SignatureBox(props) {\r\n\r\n    const sigRef = useRef();\r\n    // const [signature, setSignature] = useState(null);\r\n\r\n    const handleSignatureEnd = () => {\r\n        //setSignature(sigRef.current.toDataURL());\r\n    }\r\n    const clearSignature = () => {\r\n        sigRef.current.clear();\r\n        // setSignature(null);\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', margin: \"10px\" }}>\r\n            <Paper sx={{\r\n                background: '#EEE',\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <SignatureCanvas\r\n                    penColor=\"black\"\r\n                    ref={sigRef}\r\n                    throttle={1}\r\n                    clearOnResize={true}\r\n                    canvasProps={{ width: 400, height: 250, className: 'sigCanvas' }}\r\n                    onEnd={handleSignatureEnd}\r\n                />\r\n            </Paper>\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <IconButton color=\"primary\" aria-label=\"delete pad\" size=\"large\" onClick={clearSignature}>\r\n                    <DeleteOutline />\r\n                </IconButton>\r\n                <Typography variant=\"body1\" gutterBottom sx={{ paddingTop: \"0.5em\" }}>\r\n                    {props.title}\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n};","import React, {useContext} from \"react\";\r\nimport SignatureBox from \"./SignatureBox\";\r\nimport {HeaderContext} from \"./HeaderContext\";\r\n\r\n\r\nexport default function Signature() {\r\n\r\n    const headerContextData = useContext(HeaderContext);\r\n\r\n    return (\r\n\r\n        <div className={\"page-break\"} style={{display: 'flex', alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center', margin: \"10px\"}}>\r\n\r\n            <SignatureBox id={1} title={\"Unterschrift Mieter \" + headerContextData.mieter}/>\r\n            <SignatureBox id={2} title={\"Unterschrift Vermieter \" + headerContextData.vermieter}/>\r\n\r\n        </div>\r\n\r\n    )\r\n};","import {Rating} from \"@mui/material\";\r\nimport {Delete, FiberManualRecord, Remove} from \"@mui/icons-material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nconst labels = {\r\n    1: 'defekt', 2: 'stark gebraucht', 3: 'gebraucht', 4: 'neuwertig', 5: 'neu',\r\n};\r\n\r\n\r\n/**\r\n * Eine Inventar eines ZimmerListe. Ein Inventar ist z.B. eine TÃ¼r oder eine Steckdose.\r\n * Jees Inventar hat innerhalb des Zimmers einen eindeutigen Namen und einen Wert / Status.\r\n * Dieser Status gibt den Zustand des Inventares an.\r\n *\r\n * @param {Object} props - Property object\r\n * @param {id} props.id - id des Inventares aus der Inventarliste\r\n * @param {id} props.label - der Name des Inventares aus der Inventarliste\r\n * @param {id} props.value - Gebrauchtstatus des Inventars\r\n * @param {id} props.set - Funktion zum setzen eines neuen Wertes set(<id>,<wert>)\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\n\r\nconst commonStyles = {\r\n    bgcolor: 'background.paper',\r\n    border: 1,\r\n    m: 1,\r\n    borderColor: 'text.primary',\r\n    width: '100%',\r\n};\r\n\r\n/**\r\n *\r\n * @returns {JSX.Element}\r\n * @constructor\r\n * @param {string} props.label - Der Name des Inventar\r\n * @param {number} props.idx - Der Index der Inventar in der Ã¼bergeordneten Lister\r\n */\r\nexport default function Inventar(props) {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const [label, setLabel] = React.useState(props.label);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    let icon = <FiberManualRecord color=\"white\" fontSize=\"inherit\"/>;\r\n\r\n    function checkLabel(label) {\r\n        if( props.checkFunction(label) ) {\r\n            setError(`Das Inventar '${label}' gibt es schon`);\r\n        } else\r\n            setError('');\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        let label = event.target.value;\r\n        console.log(`handleInputChange '${label}'`);\r\n        // Die Leerzeichen bleiben im Namen, weil der Anwender ev. noch weiterschreiben will\r\n        setLabel(label);\r\n        // hier werden die Leerzeichen rausgenommen\r\n        label = label ? label.trim() : label;\r\n        checkLabel(label);\r\n    };\r\n\r\n    function getLabelText() {\r\n        return (Boolean(label) && value) ? `${label} (${labels[value]})` : label;\r\n    }\r\n\r\n    return (\r\n            <Grid container spacing={1} sx={{paddingTop: 1}} color={\"black\"} borderColor={'primary.main'}>\r\n                <Grid iten xs={12} sm={6}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', paddingLeft: '0px' }}>\r\n                    <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => props.removeFnc(props.idx)}>\r\n                        <Delete/>\r\n                    </IconButton>\r\n                    <TextField fullWidth={true}\r\n                               sx={{paddingTop: 1, paddingLeft: 1}}\r\n                               error={Boolean(error)}\r\n                               helperText={error}\r\n                               InputProps={{\r\n                                   readOnly: false,\r\n                               }}\r\n                               size=\"medium\"\r\n                               onChange={handleInputChange}\r\n                               value={label}\r\n                               variant=\"standard\"/>\r\n                    </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <div style={{ display: 'flex', alignItems: 'center', paddingLeft: '0px' }}>\r\n                    <Rating\r\n                        name=\"hover-feedback\"\r\n                        value={value}\r\n                        precision={1}\r\n                        defaultValue={0}\r\n                        icon={icon}\r\n                        emptyIcon={icon}\r\n                        onChange={(event, newValue) => {\r\n                            setValue(newValue)\r\n                        }}\r\n                    />\r\n                    <Typography variant=\"body1\" component=\"div\" sx={{ marginLeft: 1 }}>{labels[value]}</Typography>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            );\r\n}","\r\nimport React from 'react';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction IconBox(props) {\r\n\r\n    // CSS-Stil fÃ¼r das Feld\r\n    const boxStyle = {\r\n        width: `100%`,\r\n        height: `300px`,\r\n        backgroundColor: 'lightgray', // Hintergrundfarbe des Felds\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    };\r\n\r\n    return (\r\n\r\n        <Box style={boxStyle}>\r\n            {props.icon}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default IconBox;","import React, {useState, useRef, useEffect} from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {Cameraswitch, NoPhotography} from \"@mui/icons-material\";\r\nimport IconBox from \"./IconBox\";\r\n\r\nconst WebcamDialog = ({ open = true, onClose, onCapture }) => {\r\n\r\n\r\n    const webcamRef = useRef(null);\r\n    const [selectedCamera, setSelectedCamera] = useState('');\r\n    const [buttonDisabled, setButtonDisabled] = useState(false);\r\n    const [cameras, setCameras] = useState([]);\r\n\r\n    const handleCapture = () => {\r\n        setButtonDisabled(true);\r\n\r\n        try {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            onCapture(imageSrc);\r\n        }catch (e) {}\r\n\r\n        setTimeout(() => {\r\n            setButtonDisabled(false); // Aktiviere den Button nach 0,5 Sekunden\r\n        }, 500);\r\n    };\r\n\r\n    const handleCameraSwitch = () => {\r\n        if (cameras.length > 1) {\r\n            const newCamera =\r\n                cameras[(cameras.indexOf(selectedCamera) + 1) % cameras.length];\r\n            setSelectedCamera(newCamera);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getCameras = async () => {\r\n\r\n            try {\r\n                await navigator.mediaDevices.getUserMedia({audio: false, video: true});\r\n                let devices = await navigator.mediaDevices.enumerateDevices();\r\n                console.log(devices);\r\n\r\n                devices.map((device) => { console.log(device.label); return \"\";});\r\n                const videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n                const deviceIds = videoDevices.map((device) => device.deviceId);\r\n                setCameras(deviceIds);\r\n                console.log(\"Cameras found \" + videoDevices.length );\r\n\r\n                if (deviceIds.length > 0 && deviceIds[0] ) {\r\n                    setSelectedCamera(deviceIds[0]);\r\n                    console.log(`Camera selected ${deviceIds[0]}`);\r\n                }\r\n\r\n\r\n            } catch (error) {\r\n                console.error(\"Fehler beim Abrufen der Kameras:\", error);\r\n            }\r\n        };\r\n\r\n        if (open) {\r\n            getCameras().then();\r\n        }\r\n    }, []);\r\n\r\n    let cameraWindow;\r\n    if( selectedCamera ) {\r\n        cameraWindow =  <Webcam\r\n            audio={false}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            videoConstraints={{\r\n                deviceId: selectedCamera,\r\n            }}\r\n            style={{width: \"100%\", height: \"400px\"}}\r\n            />;\r\n    }\r\n    else {\r\n        if( !buttonDisabled)\r\n            setButtonDisabled(true);\r\n         cameraWindow = <IconBox icon={<NoPhotography sx={{ fontSize: 40 }}/>} />;\r\n    }\r\n\r\n\r\n\r\n    console.log(`WebcamDialog render ${open} selected '${selectedCamera}' Kameras ${cameras.length}`);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth sx={{m:\"0\", p:\"0\"}}>\r\n            <DialogContent sx={{m: \"0\", p: \"0\"}}>\r\n                <Grid container spacing={1} padding={1} width={\"100%\"}>\r\n                    <Grid iten xs={6}>\r\n                        {cameras.length > 1 && (\r\n                        <div style={{display: \"flex\", justifyContent: \"left\", width: \"45%\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={handleCameraSwitch}\r\n                            >\r\n                                <Cameraswitch/>\r\n                            </IconButton>\r\n                        </div>\r\n                            )}\r\n                    </Grid>\r\n                    <Grid iten xs={6} alignItems={\"right\"} margin={\"0\"}>\r\n                        <div style={{display: \"flex\", justifyContent: \"right\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={onClose}\r\n                            >\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    {cameraWindow}\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions sx={{m: \"0\", p: \"0 1 0 0\"}}>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", width: \"100%\"}}>\r\n                    <Button\r\n                        onClick={handleCapture}\r\n                        variant=\"contained\"\r\n\r\n                        color=\"primary\"\r\n                        disabled={!selectedCamera && buttonDisabled}\r\n                        startIcon={<PhotoCameraIcon/>}\r\n                    >\r\n                        Aufnehmen\r\n                    </Button>\r\n                </div>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default WebcamDialog;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport WebcamDialog from \"./WebcamDialog\"; // Importieren Sie Ihre Webcam-Dialog-Komponente hier\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst ImageGrid = (props) => {\r\n\r\n    const images = props.images;\r\n    const deleteImageFnc = props.deleteFunction;\r\n\r\n    const gridRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Wenn sich die FenstergrÃ¶Ãe Ã¤ndert, berechnen Sie die Anzahl der Bilder pro Zeile basierend auf der Fensterbreite.\r\n        const handleResize = () => {\r\n            const grid = gridRef.current;\r\n            const containerWidth = grid.offsetWidth;\r\n            const minImageSize = 300; // Mindestplec  // const minImagesPerRow = Math.floor(containerWidth / minImageSize);\r\n            grid.style.gridTemplateColumns = `repeat(auto-fit, minmax(${minImageSize}px, 1fr))`;\r\n        };\r\n\r\n        handleResize(); // Initialisieren Sie das Grid basierend auf der aktuellen FenstergrÃ¶Ãe.\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n            <div\r\n                ref={gridRef}\r\n                style={{\r\n                    display: \"grid\",\r\n                    gap: \"10px\",\r\n                }}\r\n            >\r\n                {images.map((image, index) => (\r\n                    <div key={index} style={{ display: \"flex\", position: \"center\", justifyContent: \"center\"  }}>\r\n                        <img src={image} alt={`Bild ${index}`} style={{ width: \"100%\", margin: \"10px\" }} />\r\n                        <button\r\n                            onClick={() => deleteImageFnc(index)}\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                bottom: \"10px\",\r\n                                left: \"10px\",\r\n                                backgroundColor: \"white\",\r\n                                padding: \"5px\",\r\n                                borderRadius: \"50%\",\r\n                            }}\r\n                        >\r\n                            <DeleteIcon style={{ color: \"blue\" }} />\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import * as React from \"react\";\r\nimport {useState} from \"react\";\r\n\r\nimport {FormControlLabel, FormGroup, InputAdornment, Switch} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Inventar from \"./Inventar\";\r\nimport {AddCircle, Camera, EditNote, Gradient, Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ImageGrid from \"./ImageGrid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport WebcamDialog from \"./WebcamDialog\";\r\n\r\n\r\n// initialisiere Inventory\r\nfunction createInventoryObjectList(InventoryListe) {\r\n    let idx = 0;\r\n    return InventoryListe.map(element => ({idx: idx++, label: element, value: 0}));\r\n}\r\n\r\n\r\nexport const Inventory_Zimmer = createInventoryObjectList([\"TÃ¼r\", \"TÃ¼rzarge\", \"Wand\", \"Boden\", \"FuÃleisten\", \"Decke\", \"Steckdosen\", \"Schalter\", \"Heizung\",\r\n    \"Fenster\"]);\r\n\r\nexport const Inventory_GÃ¤ste_WC = [...Inventory_Zimmer, ...createInventoryObjectList( [\"WC-Sitz\", \"WC\", \"SpÃ¼lkasten\", \"Waschbecken\", \"Wasserhahn\", \"Toilettenpapierhalter\", \"Spiegel\"] ) ];\r\n\r\nexport const Inventory_WC = [...Inventory_Zimmer, ...createInventoryObjectList( [\"Duschtrennwand\", \"Duschvorhang\", \"Badewanne\", \"Badewannenarmatur\"])];\r\n\r\nexport const Inventory_Balkon = createInventoryObjectList([\"Boden\", \"Decke\", \"WÃ¤nde\", \"Glas\", \"Fenster\", \"Oberlicht\"]);\r\n\r\nexport const Inventory_Keller = createInventoryObjectList([\"TÃ¼r\", \"Boden\", \"Schalter\", \"Steckdose\", \"Fenster\"]);\r\n\r\nexport const Inventory_Abstellraum = createInventoryObjectList([\"TÃ¼r\", \"TÃ¼rzarge\", \"Boden\", \"FuÃleisten\", \"Decke\", \"Schalter\", \"Steckdose\"]);\r\n\r\n\r\n/**\r\n *\r\n * @param props.InventoryListe {[string]} Liste des Inventorys in dem Zimmer\r\n *         Ein InventoryElement hat die Attribute id, label, value\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Zimmer(props) {\r\n\r\n    const [Inventory, setInventory] = React.useState(props.inventory);\r\n    // Darstellung des InventoryDialogs\r\n    const [open, setOpen] = React.useState(true);\r\n    const [showComment, setShowComment] = React.useState(false);\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n    const [images, setImages] = useState([]);\r\n\r\n\r\n    console.log(`Inventory....` + JSON.stringify(Inventory));\r\n\r\n/* wird ev. genutzt um zu prÃ¼fen ob alle Werte gesetzt sind\r\n    function fillState() {\r\n        let elements = Inventory.length;\r\n        let count = 0;\r\n        for( let item in Inventory ) {\r\n            count += item.\r\n        }\r\n    }\r\n    // <div style={{ marginRight: '10px' }}> <CircularProgressWithLabel value=\"0\"/></div>\r\n  */\r\n\r\n    function containsInventory(label) {\r\n        console.log(`containsInventory ${label}`)\r\n        let retValue = false;\r\n        for (let i in Inventory) {\r\n            console.log(`compare ${i} ${Inventory[i].label}`);\r\n            if (Inventory[i].label === label)\r\n                retValue = true;\r\n        }\r\n        console.log(`containsInventory ${label} ${retValue}`)\r\n        return retValue;\r\n    }\r\n\r\n    function addInventory() {\r\n        let tmpInventory = [...Inventory];\r\n        tmpInventory = tmpInventory.concat({id: tmpInventory.length, label: '', value: 0});\r\n        setInventory(tmpInventory);\r\n    }\r\n\r\n    function removeInventory(idx) {\r\n        let tmpInventory = [...Inventory];\r\n        tmpInventory.splice(idx, 1);\r\n        console.log(`removeInventory: ${Inventory[idx].label} Neue Liste: ` + JSON.stringify(tmpInventory));\r\n\r\n        setInventory(tmpInventory);\r\n    }\r\n\r\n\r\n    function setInventoryValue(id, label, value) {\r\n        console.log(`setInventoryValue: ${id}, ${label}, ${value},`);\r\n        let localList = [...Inventory];\r\n        localList[id] = {label: label, value: value};\r\n        setInventory(localList);\r\n    }\r\n\r\n    function handleFoldComponent() {\r\n        // toggle state\r\n        setOpen(!open);\r\n        setShowDialog(false);\r\n    }\r\n\r\n    const handleCapture = (image) => {\r\n        setImages((prevImages) => [...prevImages, image]);\r\n    };\r\n\r\n    const deleteImage = (index) => {\r\n        const updatedImages = [...images];\r\n        updatedImages.splice(index, 1);\r\n        setImages(updatedImages);\r\n    };\r\n\r\n    console.log(`Zimmer: ${props.name} Fold: ${open}  Camera Dialog: ${showDialog}`);\r\n\r\n    if (open === false)\r\n        return (\r\n            <Paper\r\n                className={\"page-break\"}\r\n                sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Grid container spacing={1} paddingLeft={1}>\r\n                    <Grid item xs={11}>\r\n                        <Typography variant=\"h6\">{props.name} (nicht relevant)</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1} spacing={\"10px\"}>\r\n                        <IconButton color=\"primary\" onClick={handleFoldComponent}><Visibility/></IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        )\r\n    else\r\n        return (\r\n            <Paper\r\n                className={\"page-break\"}\r\n                sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n\r\n                <Grid container spacing={1} paddingLeft={1} alignItems=\"center\">\r\n                    <Grid item xs={11}>\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                           <Typography variant=\"h6\">{props.name}</Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton sx={{marginRight: '2'}} color=\"primary\" onClick={handleFoldComponent}><VisibilityOff/></IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TextField id=\"heizungszÃ¤hler\" label=\"HeizungszÃ¤hler\" required={true}\r\n                                   variant=\"standard\"\r\n                                   fullWidth={true} type=\"text\"\r\n                                   InputLabelProps={{\r\n                                       shrink: true,\r\n                                   }}\r\n                                   size=\"small\"\r\n                                   InputProps={{\r\n                                       startAdornment: (\r\n                                           <InputAdornment position=\"start\">\r\n                                               <Gradient/>\r\n                                           </InputAdornment>\r\n                                       ),\r\n                                   }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <FormGroup><FormControlLabel control={<Switch/>}\r\n                                                     label=\"SchlÃ¼ssel\"/></FormGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12} sx={{p: 0, m: 0}}>\r\n                        {Inventory.map((element) => {\r\n                            return (<Inventar key={element.idx} idx={element.idx} label={element.label}\r\n                                              set={setInventoryValue}\r\n                                              removeFnc={removeInventory} checkFunction={containsInventory}/>)\r\n                        })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Box sx={{m: 1}}>\r\n                    <Button startIcon={<AddCircle/>} sx={{marginRight: 1}}\r\n                            onClick={addInventory}>\r\n                        Inventar\r\n                    </Button>\r\n                    <Button startIcon={<EditNote/>} sx={{marginRight: 1}}\r\n                            onClick={() => setShowComment(!showComment)}>\r\n                        Hinweise\r\n                    </Button>\r\n                    <Button onClick={() => {\r\n                                        setShowDialog(true)\r\n                                    }}\r\n                            startIcon={<Camera/>}> Fotos </Button>\r\n                </Box>\r\n                <Box sx={{m: 1}}>\r\n                    {showComment && (<TextField fullWidth multiline rows={3} label=\"Hinweistext\"></TextField>)}\r\n                </Box>\r\n\r\n                {showDialog && (<WebcamDialog onClose={() => setShowDialog(false)} onCapture={handleCapture}/>)}\r\n                {Boolean(images) && (<ImageGrid images={images} deleteFunction={deleteImage}/>)}\r\n\r\n            </Paper>\r\n        );\r\n\r\n}","\r\nimport * as React from \"react\";\r\nimport Zimmer, {\r\n    Inventory_Abstellraum, Inventory_Balkon, Inventory_GÃ¤ste_WC, Inventory_Keller, Inventory_WC,\r\n    Inventory_Zimmer\r\n} from \"./Zimmer\";\r\n\r\nexport default function ZimmerListe(props) {\r\n\r\n\r\n    return (\r\n           <>\r\n               <Zimmer name=\"Flur\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"KÃ¼che\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Wohnzimmer\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Balkon/ Loggia\" sonstiges={3} inventory={Inventory_Balkon} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer I\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer II\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"WC\" sonstiges={3} inventory={Inventory_WC} open={props.open}/>\r\n               <Zimmer name=\"GÃ¤ste-WC\" sonstiges={3} inventory={Inventory_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Abstellraum\" sonstiges={3} inventory={Inventory_Abstellraum} open={props.open}/>\r\n               <Zimmer name=\"Keller\" sonstiges={3} inventory={Inventory_Keller}  open={props.open}/>\r\n           </>\r\n    );\r\n}\r\n","import './App.css';\nimport * as React from \"react\";\nimport {useReducer, useRef} from \"react\";\nimport ReactToPrint from 'react-to-print';\nimport ButtonAppBar from \"./components/AppBar\";\nimport Schluessel from \"./components/Schluessel\";\nimport ProtokollKopf from \"./components/ProtokollKopf\";\nimport Signature from \"./components/Signature\";\nimport ZimmerListe from \"./components/ZimmerListe\";\nimport Button from \"@mui/material/Button\";\nimport {PrintOutlined} from \"@mui/icons-material\";\nimport {dataReducer, HeaderContext, headerContextData, HeaderDispatchContext} from \"./components/HeaderContext\";\n\n\nexport function PrintApp() {\n\n    const componentRef = useRef();\n\n    const [headerData, dispatch] = useReducer(dataReducer, headerContextData);\n\n\n    return (\n        <div>\n            <HeaderContext.Provider value={headerData}>\n                <HeaderDispatchContext.Provider value={dispatch}>\n                    <App ref={componentRef}/>\n                    <ReactToPrint content={() => componentRef.current}\n                                  trigger={() => {\n                                      return <div style={{display: 'flex', alignItems: 'center', marginBottom: '10px'}}>\n                                          <Button sx={{m: 2}} variant=\"contained\" fullWidth={true}\n                                                  startIcon={<PrintOutlined/>}>Drucken</Button>\n                                      </div>;\n                                  }}\n                    />\n                </HeaderDispatchContext.Provider>\n            </HeaderContext.Provider>\n        </div>\n    );\n}\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        console.log(\"App open \" + this.props.open);\n    }\n\n    render() {\n        return (\n            <div>\n                <ButtonAppBar/>\n                <ProtokollKopf/>\n                <Schluessel/>\n                <ZimmerListe open={this.props.open}/>\n                <Signature/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {PrintApp} from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <PrintApp />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
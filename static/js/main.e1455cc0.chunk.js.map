{"version":3,"sources":["components/AppBar.js","components/Schluessel.js","components/ProtokollKopf.js","components/SignatureBox.js","components/Signature.js","components/Inventar.js","components/WebcamDialog.js","components/ImageGrid.js","components/Zimmer.js","components/ZimmerListe.js","App.js","index.js"],"names":["version","ButtonAppBar","props","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","anchorEl","setAnchorEl","handleClose","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","mr","onClick","event","currentTarget","MenuIcon","Menu","id","onClose","MenuListProps","aria-labelledby","MenuItem","Typography","variant","component","Schluessel","Paper","p","m","display","flexDirection","maxWidth","elevation","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","label","required","fullWidth","type","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","House","DoorFront","MarkunreadMailbox","ElectricalServices","ProtokollKopf","name","autoComplete","SignatureBox","sigRef","useRef","createElement","width","background","SignatureCanvas","penColor","ref","canvasProps","height","border","onEnd","style","alignItems","justifyContent","DeleteOutline","current","clear","paddingTop","Signature","md","title","labels","1","2","3","4","5","Inventar","value","setValue","setLabel","_React$useState5","_React$useState6","error","setError","icon","FiberManualRecord","fontSize","padding","iten","Boolean","helperText","readOnly","onChange","target","console","log","concat","checkFunction","checkLabel","trim","Rating","precision","defaultValue","emptyIcon","newValue","marginLeft","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","WebcamDialog","_ref","_ref$open","onCapture","webcamRef","_useState","useState","_useState2","selectedCamera","setSelectedCamera","_useState3","_useState4","cameras","setCameras","useEffect","_ref2","_asyncToGenerator","_callee","devices","videoDevices","deviceIds","_context","navigator","mediaDevices","enumerateDevices","map","device","filter","kind","deviceId","t0","apply","arguments","getCameras","Dialog","DialogContent","newCamera","indexOf","Cameraswitch","CloseIcon","Webcam","audio","screenshotFormat","videoConstraints","DialogActions","Button","imageSrc","getScreenshot","disabled","startIcon","PhotoCameraIcon","ImageGrid","openDialog","setOpenDialog","images","setImages","gridRef","handleResize","gridTemplateColumns","window","addEventListener","removeEventListener","image","prevImages","_toConsumableArray","gap","index","src","alt","updatedImages","splice","deleteImage","bottom","left","backgroundColor","borderRadius","DeleteIcon","Inventar_Zimmer","Inventar_GÃ¤ste_WC","Inventar_WC","Inventar_Balkon","Inventar_Keller","Zimmer","inventar","setInventar","showComment","setShowComment","_React$useState7","_React$useState8","showDialog","setShowDialog","inventarListe","containsInventar","retValue","setInventarValue","localList","handleClick","tmpInventar","paddingLeft","Visibility","VisibilityOff","Gradient","FormGroup","FormControlLabel","control","Switch","element","set","AddCircle","marginRight","EditNote","Camera","multiline","rows","ZimmerListe","sonstiges","PrintApp","componentRef","App","ReactToPrint","content","trigger","PrintOutlined","_React$PureComponent","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_createClass","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e1455cc0.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Menu, MenuItem} from \"@mui/material\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nconst version = \"0.1.5\";\r\n\r\nexport default function ButtonAppBar(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState( null );\r\n\r\n    const handleClick = (event) => {\r\n        setOpen(true);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2 }}\r\n                        onClick={handleClick}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"basic-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'basic-button',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={handleClose}>Version {version}</MenuItem>\r\n                    </Menu>\r\n\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        Wohnungszustandsprotokoll\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { DoorFront, ElectricalServices, House, MarkunreadMailbox} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\n\r\nexport default function Schluessel() {\r\n    return (\r\n        <React.Fragment>\r\n            <Paper sx={{\r\n                p: 2,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    SchlÃ¼ssel\r\n                </Typography>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"hausschluessel\"\r\n                            label=\"HausschlÃ¼ssel\"\r\n                            required={true}\r\n                            fullWidth={true}\r\n                            type=\"number\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <House />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"wohnungschluessel\"\r\n                            label=\"WohnungschlÃ¼ssel\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <DoorFront />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"briefkastenschluessel\"\r\n                            label=\"Briefkasten\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MarkunreadMailbox />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n\r\n                            id=\"hausanschlussschluessel\"\r\n                            label=\"Hausanschluss\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ElectricalServices />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nexport default function ProtokollKopf() {\r\n    return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Wohnungsdaten\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"wohnung\"\r\n                        name=\"Wohnung\"\r\n                        label=\"Wohnung\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"datum\"\r\n                        name=\"Datum\"\r\n                        label=\"Datum\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"adresseWhg\"\r\n                        name=\"Adresse Wohnung\"\r\n                        label=\"Adresse Wohnung\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"mietername\"\r\n                        name=\"mietername\"\r\n                        label=\"Name Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"neueAdresse\"\r\n                        name=\"neueAdresse\"\r\n                        label=\"Neue Adresse\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <TextField\r\n                        required\r\n                        id=\"email_mieter\"\r\n                        name=\"email_mieter\"\r\n                        label=\"EMail Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"teilneherVermieter\"\r\n                        name=\"vermieter\"\r\n                        label=\"Teilnehmer Vermieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n            </Grid>\r\n            </Paper>\r\n    );\r\n}","import React, {useRef} from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {DeleteOutline} from \"@mui/icons-material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\n\r\n\r\nexport default function SignatureBox() {\r\n\r\n    const sigRef = useRef();\r\n    // const [signature, setSignature] = useState(null);\r\n\r\n    const handleSignatureEnd = () => {\r\n        //setSignature(sigRef.current.toDataURL());\r\n    }\r\n    const clearSignature = () => {\r\n        sigRef.current.clear();\r\n        // setSignature(null);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} width=\"100%\">\r\n                <Paper sx={{\r\n                    background: '#EEE',\r\n                    p: 1,\r\n                    m: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxWidth: \"100%\",\r\n                    elevation: \"2\",\r\n                }}>\r\n                    <SignatureCanvas\r\n                        penColor=\"black\"\r\n                        ref={sigRef}\r\n                        canvasProps={{height: \"200px\", border: \"1px solid black\", color: \"blue\"}}\r\n                        onEnd={handleSignatureEnd}\r\n                    />\r\n                </Paper>\r\n\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <IconButton color=\"primary\" aria-label=\"delete pad\" size=\"large\">\r\n                        <DeleteOutline onClick={clearSignature}/>\r\n                    </IconButton>\r\n                    <Typography variant=\"body1\" gutterBottom sx={{paddingTop: \"0.5em\"}}>\r\n                        Unterschrift Mieter\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};","\r\nimport React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport SignatureBox from \"./SignatureBox\";\r\n\r\n\r\nexport default function Signature() {\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} md={6} width=\"100%\" >\r\n                   <SignatureBox title=\"Unterschrift Mieter\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                    <SignatureBox title=\"Unterschrift Vermieter\" />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n};","import {Rating} from \"@mui/material\";\r\nimport {FiberManualRecord} from \"@mui/icons-material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst labels = {\r\n    1: 'defekt', 2: 'stark gebraucht', 3: 'gebraucht', 4: 'neuwertig', 5: 'neu',\r\n};\r\n\r\n\r\n/**\r\n * Eine Inventar eines ZimmerListe. Ein Inventar ist z.B. eine TÃ¼r oder eine Steckdose.\r\n * Jees Inventar hat innerhalb des Zimmers einen eindeutigen Namen und einen Wert / Status.\r\n * Dieser Status gibt den Zustand des Inventares an.\r\n *\r\n * @param {Object} props - Property object\r\n * @param {id} props.id - id des Inventares aus der Inventarliste\r\n * @param {id} props.label - der Name des Inventares aus der Inventarliste\r\n * @param {id} props.value - Gebrauchtstatus des Inventars\r\n * @param {id} props.set - Funktion zum setzen eines neuen Wertes set(<id>,<wert>)\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Inventar(props) {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const [label, setLabel] = React.useState(props.label);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    let icon = <FiberManualRecord color=\"white\" fontSize=\"inherit\"/>;\r\n\r\n    function checkLabel(label) {\r\n        if( props.checkFunction(label) ) {\r\n            setError(`Das Inventar '${label}' gibt es schon`);\r\n        } else\r\n            setError('');\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        let label = event.target.value;\r\n        console.log(`handleInputChange '${label}'`);\r\n        // Die Leerzeichen bleiben im Namen, weil der Anwender ev. noch weiterschreiben will\r\n        setLabel(label);\r\n        // hier werden die Leerzeichen rausgenommen\r\n        label = label ? label.trim() : label;\r\n        checkLabel(label);\r\n    };\r\n\r\n    function getLabelText() {\r\n        return (Boolean(label) && value) ? `${label} (${labels[value]})` : label;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={1} padding={1} width={\"100%\"}>\r\n                <Grid iten xs={6}>\r\n                    <TextField fullWidth={true}\r\n                               sx={{paddingTop: 0}}\r\n                               error={Boolean(error)}\r\n                               helperText={error}\r\n                               InputProps={{\r\n                                   readOnly: false,\r\n                               }}\r\n                               onChange={handleInputChange}\r\n                               value={label}\r\n                               variant=\"standard\"/>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Rating\r\n                        name=\"hover-feedback\"\r\n                        value={value}\r\n                        precision={1}\r\n                        defaultValue={0}\r\n                        icon={icon}\r\n                        emptyIcon={icon}\r\n                        onChange={(event, newValue) => {\r\n                            setValue(newValue)\r\n                        }}\r\n                    />\r\n                    <Typography variant=\"overline\" component=\"div\" sx={{ marginLeft: 1 }}>{labels[value]}</Typography>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </>);\r\n}","import React, {useState, useRef, useEffect} from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {Cameraswitch} from \"@mui/icons-material\";\r\n\r\nconst WebcamDialog = ({ open = true, onClose, onCapture }) => {\r\n\r\n\r\n    const webcamRef = useRef(null);\r\n    const [selectedCamera, setSelectedCamera] = useState('');\r\n    const [cameras, setCameras] = useState([]);\r\n\r\n    const handleCapture = () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        onCapture(imageSrc);\r\n    };\r\n\r\n    const handleCameraSwitch = () => {\r\n        if (cameras.length > 1) {\r\n            const newCamera =\r\n                cameras[(cameras.indexOf(selectedCamera) + 1) % cameras.length];\r\n            setSelectedCamera(newCamera);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getCameras = async () => {\r\n            try {\r\n                const devices = await navigator.mediaDevices.enumerateDevices();\r\n                devices.map((device) => { console.log(device.label); return \"\";});\r\n\r\n                const videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n                const deviceIds = videoDevices.map((device) => device.deviceId);\r\n                setCameras(deviceIds);\r\n                console.log(\"Cameras found \" + videoDevices.length );\r\n\r\n                if (videoDevices.length > 0) {\r\n                    setSelectedCamera(videoDevices[0].deviceId);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Fehler beim Abrufen der Kameras:\", error);\r\n            }\r\n        };\r\n\r\n        if (open) {\r\n            getCameras().then();\r\n        }\r\n    }, [open]);\r\n\r\n    console.log(\"WebcamDialog render = \" + open + \" selected? => '\" + selectedCamera + \" Kameras + length: \" + cameras.length);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n            <DialogContent>\r\n                <Grid container spacing={1} padding={1} width={\"100%\"}>\r\n                    <Grid iten xs={6}>\r\n                        {cameras.length > 1 && (\r\n                        <div style={{display: \"flex\", justifyContent: \"left\", width: \"45%\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={handleCameraSwitch}\r\n                            >\r\n                                <Cameraswitch/>\r\n                            </IconButton>\r\n                        </div>\r\n                            )}\r\n                    </Grid>\r\n                    <Grid iten xs={6} alignItems={\"right\"}>\r\n                        <div style={{display: \"flex\", justifyContent: \"right\", width: \"100%\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={onClose}\r\n                            >\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                {selectedCamera && (\r\n                    <Webcam\r\n                        audio={false}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        videoConstraints={{\r\n                            deviceId: selectedCamera,\r\n                        }}\r\n                        style={{width: \"100%\"}}\r\n                    />\r\n                )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", width: \"100%\"}}>\r\n                    <Button\r\n                        onClick={handleCapture}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={!selectedCamera}\r\n                        startIcon={<PhotoCameraIcon/>}\r\n                    >\r\n                        Aufnehmen\r\n                    </Button>\r\n                </div>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default WebcamDialog;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport WebcamDialog from \"./WebcamDialog\"; // Importieren Sie Ihre Webcam-Dialog-Komponente hier\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst ImageGrid = () => {\r\n\r\n    const [openDialog, setOpenDialog] = useState(true);\r\n\r\n    const [images, setImages] = useState([]);\r\n    const gridRef = useRef(null);\r\n\r\n    const handleCapture = (image) => {\r\n        setImages((prevImages) => [...prevImages, image]);\r\n    };\r\n\r\n    const deleteImage = (index) => {\r\n        const updatedImages = [...images];\r\n        updatedImages.splice(index, 1);\r\n        setImages(updatedImages);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // Wenn sich die FenstergrÃ¶Ãe Ã¤ndert, berechnen Sie die Anzahl der Bilder pro Zeile basierend auf der Fensterbreite.\r\n        const handleResize = () => {\r\n            const grid = gridRef.current;\r\n            // const containerWidth = grid.offsetWidth;\r\n            const minImageSize = 240; // MindestgrÃ¶Ãe fÃ¼r Bilder\r\n            // const minImagesPerRow = Math.floor(containerWidth / minImageSize);\r\n            grid.style.gridTemplateColumns = `repeat(auto-fit, minmax(${minImageSize}px, 1fr))`;\r\n        };\r\n\r\n        handleResize(); // Initialisieren Sie das Grid basierend auf der aktuellen FenstergrÃ¶Ãe.\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <WebcamDialog open={openDialog} onClose={() => setOpenDialog(false)} onCapture={handleCapture} />\r\n\r\n            <div\r\n                ref={gridRef}\r\n                style={{\r\n                    display: \"grid\",\r\n                    gap: \"10px\",\r\n                }}\r\n            >\r\n                {images.map((image, index) => (\r\n                    <div key={index} style={{ position: \"relative\" }}>\r\n                        <img src={image} alt={`Bild ${index}`} style={{ width: \"100%\" }} />\r\n                        <button\r\n                            onClick={() => deleteImage(index)}\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                bottom: \"10px\",\r\n                                left: \"10px\",\r\n                                backgroundColor: \"white\",\r\n                                padding: \"5px\",\r\n                                borderRadius: \"50%\",\r\n                            }}\r\n                        >\r\n                            <DeleteIcon style={{ color: \"blue\" }} />\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import * as React from \"react\";\r\nimport {useEffect} from \"react\";\r\n\r\nimport {Alert, FormControlLabel, FormGroup, InputAdornment, Switch} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Inventar from \"./Inventar\";\r\nimport {AddCircle, Camera, EditNote, Gradient, Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ImageGrid from \"./ImageGrid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nexport const Inventar_Zimmer = [\"TÃ¼r\", \"TÃ¼rzarge\", \"Wand\", \"Boden\", \"FuÃleisten\", \"Decke\", \"Steckdosen\", \"Schalter\", \"Heizung\",\r\n    \"Fenster\"];\r\n\r\nexport const Inventar_GÃ¤ste_WC = [...Inventar_Zimmer, \"WC-Sitz\", \"WC\", \"SpÃ¼lkasten\", \"Waschbecken\", \"Wasserhahn\", \"Toilettenpapierhalter\", \"Spiegel\"];\r\n\r\nexport const Inventar_WC = [...Inventar_GÃ¤ste_WC, \"Duschtrennwand\", \"Duschvorhang\", \"Badewanne\", \"Badewannenarmatur\"];\r\n\r\nexport const Inventar_Balkon = [\"Boden\", \"Decke\", \"WÃ¤nde\", \"Glas\", \"Fenster\", \"Oberlicht\"];\r\n\r\nexport const Inventar_Keller = [\"TÃ¼r\", \"Boden\", \"Schalter\", \"Steckdose\", \"Fenster\"];\r\n\r\n\r\n/**\r\n *\r\n * @param props.inventarListe {[string]} Liste des Inventars in dem Zimmer\r\n *         Ein InventarElement hat die Attribute id, label, value\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Zimmer(props) {\r\n\r\n    const [inventar, setInventar] = React.useState([]);\r\n    // Darstellung des InventarDialogs\r\n    const [open, setOpen] = React.useState(true);\r\n    const [showComment, setShowComment] = React.useState(false);\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n\r\n\r\n    let inventarListe = props.inventarListe;\r\n\r\n    // initialisiere Inventar\r\n    useEffect(() => {\r\n            if (inventarListe.length > 0) {\r\n                let tmpInventar = [];\r\n                for (let i = 0; i < inventarListe.length; i++) {\r\n                    tmpInventar = tmpInventar.concat({label: inventarListe[i], value: 0, id: i});\r\n                }\r\n                setInventar(tmpInventar);\r\n            }\r\n        }\r\n        , []);\r\n\r\n    function containsInventar( label ) {\r\n        console.log(`containsInventar ${label}`)\r\n        let retValue = false;\r\n        for( let i in inventarListe ) {\r\n            console.log(`compare ${i} ${inventarListe[i]}`);\r\n            if( inventarListe[i] === label )\r\n                retValue = true;\r\n        }\r\n        console.log(`containsInventar ${label} ${retValue}`)\r\n        return retValue;\r\n    }\r\n\r\n\r\n    function addElement() {\r\n        let tmpInventar = [...inventar];\r\n        tmpInventar = tmpInventar.concat({id: tmpInventar.length, label: '', value: 0});\r\n        setInventar(tmpInventar);\r\n    }\r\n\r\n    function setInventarValue(id, label, value) {\r\n        console.log(`setInventarValue: ${id}, ${label}, ${value},`);\r\n        let localList = [...inventar];\r\n        localList[id] = {label: label, value: value};\r\n        localList[id] = {label, value};\r\n        setInventar(localList);\r\n    }\r\n\r\n    function handleClick() {\r\n        setOpen(!open);\r\n    }\r\n\r\n    console.log(\"Zimmer: \" + props.name + \" open \" + open);\r\n    if (open === false)\r\n        return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Grid container spacing={1} paddingLeft={1}>\r\n                    <Grid item xs={11}> <Typography variant=\"h6\">{props.name} (nicht relevant)</Typography></Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleClick}><Visibility/></IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n        )\r\n    else\r\n        return (\r\n\r\n\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n\r\n                <Grid container spacing={1} paddingLeft={1} alignItems=\"center\">\r\n                    <Grid item xs={11}> <Typography variant=\"h6\">{props.name}</Typography></Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleClick}><VisibilityOff/></IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TextField id=\"heizungszÃ¤hler\" label=\"HeizungszÃ¤hler\" required={true}\r\n                                   fullWidth={true} type=\"text\"\r\n                                   InputLabelProps={{\r\n                                       shrink: true,\r\n                                   }}\r\n                                   InputProps={{\r\n                                       startAdornment: (\r\n                                           <InputAdornment position=\"start\">\r\n                                               <Gradient/>\r\n                                           </InputAdornment>\r\n                                       ),\r\n                                   }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <FormGroup><FormControlLabel control={<Switch/>}\r\n                                                     label=\"SchlÃ¼ssel\"/></FormGroup>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{p: 0, marginLeft: 1, m: 1}}> {\r\n                    inventar.map((element, index) => {\r\n                        return (\r\n                            <Inventar id={index} label={element.label} set={setInventarValue} checkFunction={containsInventar}/>\r\n                        )\r\n                    })\r\n                }\r\n                </Box>\r\n                <Box sx={{m: 1}}>\r\n                    <Button startIcon={<AddCircle/>} sx={{marginRight: 1}}\r\n                            onClick={addElement}>\r\n                        Inventar\r\n                    </Button>\r\n                    <Button startIcon={<EditNote/>} sx={{marginRight: 1}}\r\n                            onClick={() => setShowComment(!showComment)}>\r\n                        Hinweise\r\n                    </Button>\r\n                    <Button  onClick={() => {\r\n                        setShowDialog(true)\r\n                    }}\r\n                            startIcon={<Camera/>}\r\n                    > Fotos </Button>\r\n                </Box>\r\n                <Box sx={{m: 1}}>\r\n                    {showComment && (<TextField fullWidth multiline rows={3} label=\"Hinweistext\"></TextField>)}\r\n                </Box>\r\n\r\n                {showDialog && (<ImageGrid/>)}\r\n\r\n            </Paper>\r\n\r\n        );\r\n\r\n}","\r\nimport * as React from \"react\";\r\nimport Zimmer, {Inventar_Balkon, Inventar_GÃ¤ste_WC, Inventar_Keller, Inventar_WC, Inventar_Zimmer} from \"./Zimmer\";\r\n\r\nexport default function ZimmerListe(props) {\r\n\r\n\r\n    return (\r\n           <>\r\n               <Zimmer name=\"Flur\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"KÃ¼che\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Wohnzimmer\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Balkon/ Loggia\" sonstiges={3} inventarListe={Inventar_Balkon} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer I\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer II\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"WC\" sonstiges={3} inventarListe={Inventar_WC} open={props.open}/>\r\n               <Zimmer name=\"GÃ¤ste-WC\" sonstiges={3} inventarListe={Inventar_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Abstellraum\" sonstiges={3} inventarListe={Inventar_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Keller\" sonstiges={3} inventarListe={Inventar_Keller}  open={props.open}/>\r\n           </>\r\n    );\r\n}\r\n","import './App.css';\nimport * as React from \"react\";\nimport {useRef} from \"react\";\nimport ReactToPrint from 'react-to-print';\nimport ButtonAppBar from \"./components/AppBar\";\nimport Schluessel from \"./components/Schluessel\";\nimport Box from \"@mui/material/Box\";\nimport ProtokollKopf from \"./components/ProtokollKopf\";\nimport Signature from \"./components/Signature\";\nimport ZimmerListe from \"./components/ZimmerListe\";\nimport Button from \"@mui/material/Button\";\nimport {PrintOutlined} from \"@mui/icons-material\";\n\n\nexport function PrintApp() {\n\n    const componentRef = useRef();\n\n    return (\n        <div>\n            <App ref={componentRef} />\n\n            <ReactToPrint content={() => componentRef.current }\n\n                          trigger={() => {\n                              return <Box sx={{p: 1}}> <Button variant=\"contained\" fullWidth={true}\n                                                               startIcon={<PrintOutlined/>}>Drucken</Button></Box>;\n                          }}\n            />\n\n        </div>\n    );\n}\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        console.log(\"App open \" + this.props.open);\n    }\n\n    render() {\n        return (\n            <div>\n                <ButtonAppBar/>\n                <ProtokollKopf/>\n                <Schluessel/>\n                <ZimmerListe open={this.props.open}/>\n                <Signature/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {PrintApp} from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <PrintApp />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/AppBar.js","components/Schluessel.js","components/ProtokollKopf.js","components/SignatureBox.js","components/Signature.js","components/Inventar.js","components/WebcamDialog.js","components/ImageGrid.js","components/Zimmer.js","components/ZimmerListe.js","App.js","index.js"],"names":["ButtonAppBar","props","React","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","Schluessel","Paper","p","m","display","flexDirection","maxWidth","elevation","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","id","label","required","fullWidth","type","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","House","DoorFront","MarkunreadMailbox","ElectricalServices","ProtokollKopf","name","autoComplete","SignatureBox","sigRef","useRef","_useState","useState","_useState2","_slicedToArray","setSignature","createElement","width","SignatureCanvas","penColor","canvasProps","className","ref","onEnd","current","toDataURL","direction","alignItems","margin","padding","IconButton","color","aria-label","size","DeleteOutline","onClick","clear","Signature","md","title","labels","1","2","3","4","5","Inventar","_React$useState","_React$useState2","value","setValue","_React$useState3","_React$useState4","ratingColor","setRatingColor","icon","FiberManualRecord","fontSize","handleMouseMove","event","newValue","style","console","log","readonly","iten","paddingTop","readOnly","onChange","set","Rating","precision","defaultValue","onChangeActive","onMouseLeave","emptyIcon","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","WebcamDialog","_ref","_ref$open","open","onClose","onCapture","webcamRef","selectedCamera","setSelectedCamera","_useState3","_useState4","cameras","setCameras","useEffect","_ref2","_asyncToGenerator","_callee","devices","videoDevices","deviceIds","_context","navigator","mediaDevices","enumerateDevices","map","device","filter","kind","deviceId","t0","apply","arguments","getCameras","Dialog","DialogContent","justifyContent","Button","newCamera","indexOf","edge","CloseIcon","Webcam","audio","screenshotFormat","videoConstraints","DialogActions","imageSrc","getScreenshot","disabled","startIcon","PhotoCameraIcon","ImageGrid","openDialog","setOpenDialog","setCapturedImage","_useState5","_useState6","images","setImages","gridRef","handleResize","gridTemplateColumns","concat","window","addEventListener","removeEventListener","image","prevImages","_toConsumableArray","gap","index","src","alt","updatedImages","splice","deleteImage","bottom","left","backgroundColor","borderRadius","DeleteIcon","Camera","Inventar_Zimmer","Inventar_GÃ¤ste_WC","Inventar_WC","Inventar_Balkon","Inventar_Keller","Zimmer","inventar","setInventar","setOpen","inventarListe","sonstiges","setInventarValue","localList","handleClick","e","paddingLeft","Visibility","VisibilityOff","Gradient","FormGroup","FormControlLabel","control","Switch","element","Divider","multiline","rows","ZimmerListe","PrintApp","componentRef","App","ReactToPrint","content","trigger","PrintOutlined","_React$PureComponent","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_createClass","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2RAOe,SAASA,EAAaC,GAEjC,OACIC,gBAACC,IAAG,CAACC,GAAI,CAAEC,SAAU,IACjBH,gBAACI,IAAM,CAACC,SAAS,UACbL,gBAACM,IAAO,KACJN,gBAACO,IAAU,CAACC,QAAQ,KAAKC,UAAU,MAAMP,GAAI,CAAEC,SAAU,IAAK,mHCLnE,SAASO,IACpB,OACIV,gBAACA,WAAc,KACXA,gBAACW,IAAK,CAACT,GAAI,CACPU,EAAG,EACHC,EAAG,EACHC,QAAS,OACTC,cAAe,SACfC,SAAU,OACVC,UAAW,MAEXjB,gBAACO,IAAU,CAACC,QAAQ,KAAKU,cAAY,GAAC,gBAItClB,gBAACmB,IAAI,CAACC,WAAS,EAACC,QAAS,GACrBrB,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBxB,gBAACyB,IAAS,CACNC,GAAG,iBACHC,MAAM,mBACNC,UAAU,EACVC,WAAW,EACXC,KAAK,SACLC,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRC,eACIlC,gBAACmC,IAAc,CAAC9B,SAAS,SACrBL,gBAACoC,IAAK,WAM1BpC,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBxB,gBAACyB,IAAS,CACNC,GAAG,oBACHC,MAAM,sBACNC,UAAU,EACVE,KAAK,SACLD,WAAW,EACXE,gBAAiB,CACbC,QAAQ,GAEhBC,WAAY,CACZC,eACIlC,gBAACmC,IAAc,CAAC9B,SAAS,SACrBL,gBAACqC,IAAS,WAMtBrC,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBxB,gBAACyB,IAAS,CACNC,GAAG,wBACHC,MAAM,cACNC,UAAU,EACVE,KAAK,SACLD,WAAW,EACXE,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRC,eACIlC,gBAACmC,IAAc,CAAC9B,SAAS,SACrBL,gBAACsC,IAAiB,WAMtCtC,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBxB,gBAACyB,IAAS,CAENC,GAAG,0BACHC,MAAM,gBACNC,UAAU,EACVE,KAAK,SACLD,WAAW,EACXE,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRC,eACIlC,gBAACmC,IAAc,CAAC9B,SAAS,SACrBL,gBAACuC,IAAkB,cCzF5C,SAASC,IACpB,OACQxC,gBAACW,IAAK,CAACT,GAAI,CACPU,EAAG,EACHC,EAAG,EACHC,QAAS,OACTC,cAAe,SACfC,SAAU,OACVC,UAAW,MAEfjB,gBAACO,IAAU,CAACC,QAAQ,KAAKU,cAAY,GAAC,iBAItClB,gBAACmB,IAAI,CAACC,WAAS,EAACC,QAAS,GACrBrB,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBxB,gBAACyB,IAAS,CACNG,UAAQ,EACRF,GAAG,UACHe,KAAK,UACLd,MAAM,UACNE,WAAS,EACTa,aAAa,aACblC,QAAQ,cAGhBR,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBxB,gBAACyB,IAAS,CACNG,UAAQ,EACRF,GAAG,QACHe,KAAK,QACLd,MAAM,QACNE,WAAS,EACTrB,QAAQ,cAIhBR,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,IACXvB,gBAACyB,IAAS,CACNG,UAAQ,EACRF,GAAG,aACHe,KAAK,aACLd,MAAM,cACNE,WAAS,EACTrB,QAAQ,cAGhBR,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,IACXvB,gBAACyB,IAAS,CACNG,UAAQ,EACRF,GAAG,eACHe,KAAK,eACLd,MAAM,eACNE,WAAS,EACTrB,QAAQ,cAGhBR,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,IACXvB,gBAACyB,IAAS,CACNC,GAAG,YACHe,KAAK,YACLd,MAAM,YACNE,WAAS,EACTrB,QAAQ,8DC5DjB,SAASmC,EAAc5C,GAElC,IAAM6C,EAASC,mBAASC,EACUC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA9BI,GAAFF,EAAA,GAAcA,EAAA,IAU9B,OAEIhD,IAAAmD,cAAChC,IAAI,CAACC,WAAS,EAACC,QAAS,GACrBrB,IAAAmD,cAAChC,IAAI,CAACG,MAAI,EAACC,GAAI,GAAI6B,MAAM,QACrBpD,IAAAmD,cAACxC,IAAK,CAACT,GAAI,CACPU,EAAG,EACHC,EAAG,EACHC,QAAS,OACTC,cAAe,SACfC,SAAU,OACVC,UAAW,MAEXjB,IAAAmD,cAACE,IAAe,CACZC,SAAS,QACTC,YAAa,CAACC,UAAW,aACzBC,IAAKb,EACLc,MAxBO,WACvBR,EAAaN,EAAOe,QAAQC,gBAyBhB5D,IAAAmD,cAAChC,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGwC,UAAU,MAAMC,WAAW,WAAWC,OAAQ,GACtE/D,IAAAmD,cAAChC,IAAI,CAACG,MAAI,EAACC,GAAI,EAAGyC,QAAS,GACvBhE,IAAAmD,cAACc,IAAU,CAACC,MAAM,UAAUC,aAAW,aAAaC,KAAK,SACrDpE,IAAAmD,cAACkB,IAAa,CAACC,QA1BpB,WACnB1B,EAAOe,QAAQY,QACfrB,EAAa,WA2BGlD,IAAAmD,cAAChC,IAAI,CAACG,MAAI,EAACC,GAAI,GACXvB,IAAAmD,cAAC5C,IAAU,CAACC,QAAQ,QAAQU,cAAY,GAAC,4BCjCtD,SAASsD,IAGpB,OAEIxE,IAAAmD,cAAChC,IAAI,CAACC,WAAS,EAACC,QAAS,GACrBrB,IAAAmD,cAAChC,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIkD,GAAI,EAAGrB,MAAM,QACzBpD,IAAAmD,cAACR,EAAY,CAAC+B,MAAM,yBAG3B1E,IAAAmD,cAAChC,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIkD,GAAI,GACfzE,IAAAmD,cAACR,EAAY,CAAC+B,MAAM,+FCnBlCC,EAAS,CACXC,EAAG,SAAUC,EAAG,kBAAmBC,EAAG,YAAaC,EAAG,YAAaC,EAAG,OAiB3D,SAASC,EAASlF,GAAO,IAAAmF,EAEVlF,WAAe,GAAEmF,EAAAlC,YAAAiC,EAAA,GAApCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAAAG,EACgBtF,WAAe,QAAOuF,EAAAtC,YAAAqC,EAAA,GAArDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC9BG,EAAO1F,gBAAC2F,IAAiB,CAACzB,MAAM,QAAS0B,SAAS,YAkBtD,SAASC,EAAgBC,EAAOC,GAC5B,OAAQA,GACJ,KAAK,EACDN,EAAe,UACf,MACJ,KAAK,EACDA,EAAe,UACf,MACJ,KAAK,EACDA,EAAe,QACf,MACJ,KAAK,EAGL,KAAK,EACDA,EAAe,SACf,MAEJ,QACIA,EAAe,QAEvBC,EAAO1F,gBAAC2F,IAAiB,CAACK,MAAO,CAAC9B,MAAOsB,GAAeI,SAAS,YACjEK,QAAQC,IAAI,OAASH,EAAY,IAAML,GAK3C,IAAIS,EAA2B,KAAhBpG,EAAM4B,MAIrB,OAFAsE,QAAQC,IAAI,UAEJlG,2BAAA,KACJA,gBAACmB,IAAI,CAACC,WAAS,EAACC,QAAS,EAAG2C,QAAS,EAAGZ,MAAO,QAC3CpD,gBAACmB,IAAI,CAACiF,MAAI,EAAC7E,GAAI,GACXvB,gBAACyB,IAAS,CAACI,WAAW,EACX3B,GAAI,CAACmG,WAAY,GACjBpE,WAAY,CACRqE,SAAUH,EACVnC,QAAS,OAEbuC,SAAU,SAACT,EAAOC,GAxDzC,IAAmBpE,IAyDiBoE,EAxDhChG,EAAMyG,IAAKzG,EAAM2B,GAAIC,EAAO5B,EAAMqF,QA0DfA,MArDfT,EAAOS,GACIrF,EAAM4B,MAAQ,KAAOgD,EAAOS,GAAS,IAErCrF,EAAM4B,MAmDFnB,QAAQ,cAEvBR,gBAACmB,IAAI,CAAEG,MAAI,EAACC,GAAI,GACZvB,gBAACyG,IAAM,CACHhE,KAAK,iBACL2C,MAAOA,EACPsB,UAAW,EACXC,aAAc,EAEdC,eAAgBf,EAChBgB,aAAchB,EACdH,KAAMA,EACNoB,UAAWpB,EACXa,SAAU,SAACT,EAAOC,GACdV,EAASU,gKCvGjCgB,GAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAArC,OAAAsC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAApC,GAAA,OAAA8B,OAAAI,eAAAC,EAAAC,EAAA,CAAApC,QAAA+C,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,GAAA,IAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAApC,GAAA,OAAAmC,EAAAC,GAAApC,GAAA,SAAAmD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAA1D,MAAA8D,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAvH,KAAA,SAAAuH,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAf,GAAA,OAAAxG,KAAA,QAAAuH,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA1C,OAAA2C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA7C,GAAAG,EAAAkC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAO,EAAA9C,GAAA,0BAAA+C,QAAA,SAAAC,GAAAjC,EAAAf,EAAAgD,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAjD,EAAAqC,KAAA,WAAAvE,MAAA,SAAA+E,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAuB,EAAA9I,KAAA,KAAA+I,EAAAD,EAAAvB,IAAAjE,EAAAyF,EAAAzF,MAAA,OAAAA,GAAA,iBAAAA,GAAAgC,EAAAkC,KAAAlE,EAAA,WAAAkF,EAAAG,QAAArF,EAAA0F,SAAAC,KAAA,SAAA3F,GAAAuF,EAAA,OAAAvF,EAAAqF,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAArF,GAAA2F,KAAA,SAAAC,GAAAH,EAAAzF,MAAA4F,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAf,EAAAd,GAAA,iBAAA6B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAd,EAAA,OAAAjE,WAAA,EAAAgG,MAAA,OAAApC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAAgC,EAAArC,EAAAqC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAArC,GAAA,GAAAsC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAtC,EAAAmB,OAAAnB,EAAAwC,KAAAxC,EAAAyC,MAAAzC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAA0C,kBAAA1C,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA2C,OAAA,SAAA3C,EAAAK,KAAA6B,EAAA,gBAAAN,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAA9I,KAAA,IAAAoJ,EAAAlC,EAAAoC,KAAA,6BAAAR,EAAAvB,MAAAE,EAAA,gBAAAnE,MAAAwF,EAAAvB,IAAA+B,KAAApC,EAAAoC,MAAA,UAAAR,EAAA9I,OAAAoJ,EAAA,YAAAlC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAkC,EAAAF,EAAArC,GAAA,IAAA4C,EAAA5C,EAAAmB,SAAAkB,EAAAxD,SAAA+D,GAAA,QAAAC,IAAA1B,EAAA,OAAAnB,EAAAqC,SAAA,eAAAO,GAAAP,EAAAxD,SAAAiE,SAAA9C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAwC,EAAAN,EAAAF,EAAArC,GAAA,UAAAA,EAAAmB,SAAA,WAAAyB,IAAA5C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAAH,EAAA,aAAArC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAkB,EAAAxD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAA9I,KAAA,OAAAkH,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAqC,SAAA,KAAA9B,EAAA,IAAAyC,EAAApB,EAAAvB,IAAA,OAAA2C,IAAAZ,MAAApC,EAAAqC,EAAAY,YAAAD,EAAA5G,MAAA4D,EAAAkD,KAAAb,EAAAc,QAAA,WAAAnD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,GAAA7C,EAAAqC,SAAA,KAAA9B,GAAAyC,GAAAhD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAqC,SAAA,KAAA9B,GAAA,SAAA6C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1C,KAAAgD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA1B,EAAA0B,EAAAQ,YAAA,GAAAlC,EAAA9I,KAAA,gBAAA8I,EAAAvB,IAAAiD,EAAAQ,WAAAlC,EAAA,SAAA3B,EAAAN,GAAAgB,KAAAgD,WAAA,EAAAJ,OAAA,SAAA5D,EAAAuB,QAAAkC,EAAAzC,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA/F,EAAAkC,KAAA0D,EAAAI,GAAA,OAAAlB,EAAA9G,MAAA4H,EAAAI,GAAAlB,EAAAd,MAAA,EAAAc,EAAA,OAAAA,EAAA9G,WAAAyG,EAAAK,EAAAd,MAAA,EAAAc,GAAA,OAAAA,UAAA,UAAAH,iBAAAiB,EAAA,2BAAAxD,EAAArC,UAAAsC,EAAAnC,EAAA0C,EAAA,eAAA5E,MAAAqE,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAArE,MAAAoE,EAAApB,cAAA,IAAAoB,EAAA6D,YAAAnF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAsG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAhE,GAAA,uBAAAgE,EAAAH,aAAAG,EAAA/K,QAAAuE,EAAA0G,KAAA,SAAAH,GAAA,OAAArG,OAAAyG,eAAAzG,OAAAyG,eAAAJ,EAAA9D,IAAA8D,EAAAK,UAAAnE,EAAAvB,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAApG,UAAAD,OAAA6B,OAAAiB,GAAAuD,GAAAvG,EAAA6G,MAAA,SAAAxE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAlD,WAAAe,EAAAmC,EAAAlD,UAAAW,EAAA,kBAAA6B,OAAA3C,EAAAqD,gBAAArD,EAAA8G,MAAA,SAAAtF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAAyD,SAAA,IAAAC,EAAA,IAAA3D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAtD,EAAAsG,oBAAA7E,GAAAuF,IAAA9B,OAAAnB,KAAA,SAAAF,GAAA,OAAAA,EAAAO,KAAAP,EAAAzF,MAAA4I,EAAA9B,UAAAjC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAAhD,EAAAiH,KAAA,SAAAC,GAAA,IAAAC,EAAAjH,OAAAgH,GAAAD,EAAA,WAAAzG,KAAA2G,EAAAF,EAAArB,KAAApF,GAAA,OAAAyG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAd,QAAA,KAAA3F,EAAAyG,EAAAI,MAAA,GAAA7G,KAAA2G,EAAA,OAAAjC,EAAA9G,MAAAoC,EAAA0E,EAAAd,MAAA,EAAAc,EAAA,OAAAA,EAAAd,MAAA,EAAAc,IAAAlF,EAAA+C,SAAAd,EAAA9B,UAAA,CAAAsG,YAAAxE,EAAA8D,MAAA,SAAAuB,GAAA,GAAA3E,KAAA4E,KAAA,EAAA5E,KAAAuC,KAAA,EAAAvC,KAAA6B,KAAA7B,KAAA8B,WAAAI,EAAAlC,KAAAyB,MAAA,EAAAzB,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAN,SAAAwC,EAAAlC,KAAAgD,WAAAzC,QAAA2C,IAAAyB,EAAA,QAAA7L,KAAAkH,KAAA,MAAAlH,EAAA+L,OAAA,IAAApH,EAAAkC,KAAAK,KAAAlH,KAAAyK,OAAAzK,EAAAgM,MAAA,MAAA9E,KAAAlH,QAAAoJ,IAAA6C,KAAA,WAAA/E,KAAAyB,MAAA,MAAAuD,EAAAhF,KAAAgD,WAAA,GAAAG,WAAA,aAAA6B,EAAA7M,KAAA,MAAA6M,EAAAtF,IAAA,OAAAM,KAAAiF,MAAAlD,kBAAA,SAAAmD,GAAA,GAAAlF,KAAAyB,KAAA,MAAAyD,EAAA,IAAA7F,EAAAW,KAAA,SAAAmF,EAAAC,EAAAC,GAAA,OAAApE,EAAA9I,KAAA,QAAA8I,EAAAvB,IAAAwF,EAAA7F,EAAAkD,KAAA6C,EAAAC,IAAAhG,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,KAAAmD,EAAA,QAAA5B,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAAxC,EAAA0B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA5C,KAAA4E,KAAA,KAAAU,EAAA7H,EAAAkC,KAAAgD,EAAA,YAAA4C,EAAA9H,EAAAkC,KAAAgD,EAAA,iBAAA2C,GAAAC,EAAA,IAAAvF,KAAA4E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA7C,KAAA4E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAAtF,KAAA4E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,6CAAAxB,KAAA4E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAd,OAAA,SAAA7J,EAAAuH,GAAA,QAAA+D,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAC,QAAA5C,KAAA4E,MAAAnH,EAAAkC,KAAAgD,EAAA,eAAA3C,KAAA4E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAArN,GAAA,aAAAA,IAAAqN,EAAA5C,QAAAlD,MAAA8F,EAAA1C,aAAA0C,EAAA,UAAAvE,EAAAuE,IAAArC,WAAA,UAAAlC,EAAA9I,OAAA8I,EAAAvB,MAAA8F,GAAAxF,KAAAQ,OAAA,OAAAR,KAAAuC,KAAAiD,EAAA1C,WAAAlD,GAAAI,KAAAyF,SAAAxE,IAAAwE,SAAA,SAAAxE,EAAA8B,GAAA,aAAA9B,EAAA9I,KAAA,MAAA8I,EAAAvB,IAAA,gBAAAuB,EAAA9I,MAAA,aAAA8I,EAAA9I,KAAA6H,KAAAuC,KAAAtB,EAAAvB,IAAA,WAAAuB,EAAA9I,MAAA6H,KAAAiF,KAAAjF,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAuC,KAAA,kBAAAtB,EAAA9I,MAAA4K,IAAA/C,KAAAuC,KAAAQ,GAAAnD,GAAA8F,OAAA,SAAA5C,GAAA,QAAAW,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA9C,KAAAyF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA/C,IAAA+F,MAAA,SAAA/C,GAAA,QAAAa,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAQ,WAAA,aAAAlC,EAAA9I,KAAA,KAAAyN,EAAA3E,EAAAvB,IAAAwD,EAAAP,GAAA,OAAAiD,GAAA,UAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAxC,KAAA0B,SAAA,CAAAxD,SAAAkC,EAAAiD,GAAAf,aAAAE,WAAA,SAAAxC,KAAAQ,SAAAR,KAAAN,SAAAwC,GAAAtC,IAAAvC,EAUA,IA0GeyI,GA1GM,SAAHC,GAA4C,IAAAC,EAAAD,EAAtCE,YAAI,IAAAD,GAAOA,EAAEE,EAAOH,EAAPG,QAASC,EAASJ,EAATI,UAGpCC,EAAYlN,iBAAO,MAAMC,EACaC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjDkN,EAAchN,EAAA,GAAEiN,EAAiBjN,EAAA,GAAAkN,EACVnN,mBAAS,IAAGoN,EAAAlN,YAAAiN,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA2C1B,OA3BAG,oBAAU,WAoBFV,GAnBY,eAAAW,EAAAC,YAAAzJ,KAAA2G,KAAG,SAAA+C,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAA7J,KAAAwB,KAAA,SAAAsI,GAAA,cAAAA,EAAAtC,KAAAsC,EAAA3E,MAAA,cAAA2E,EAAAtC,KAAA,EAAAsC,EAAA3E,KAAA,EAEW4E,UAAUC,aAAaC,mBAAkB,QAAzDN,EAAOG,EAAArF,MACLyF,IAAI,SAACC,GAAajL,QAAQC,IAAIgL,EAAOvP,SAEvCgP,EAAeD,EAAQS,OAAO,SAACD,GAAM,MAAqB,eAAhBA,EAAOE,OACjDR,EAAYD,EAAaM,IAAI,SAACC,GAAM,OAAKA,EAAOG,WACtDhB,EAAWO,GACX3K,QAAQC,IAAI,iBAAmByK,EAAaxD,QAExCwD,EAAaxD,OAAS,GACtB8C,EAAkBU,EAAa,GAAGU,UACrCR,EAAA3E,KAAA,iBAAA2E,EAAAtC,KAAA,GAAAsC,EAAAS,GAAAT,EAAA,SAGD5K,QAAQgF,MAAM,mCAAkC4F,EAAAS,IAAS,yBAAAT,EAAAnC,SAAA+B,EAAA,kBAEhE,kBAjBe,OAAAF,EAAAgB,MAAA5H,KAAA6H,YAAA,EAoBZC,GAAa1G,QAElB,CAAC6E,IAEJ3J,QAAQC,IAAI,yBAA2B0J,EAAO,kBAAoBI,EAAiB,sBAAwBI,EAAQjD,QAG/GnN,IAAAmD,cAACuO,IAAM,CAAC9B,KAAMA,EAAMC,QAASA,EAAS7O,SAAS,KAAKa,WAAS,GACzD7B,IAAAmD,cAACwO,IAAa,KACV3R,IAAAmD,cAAChC,IAAI,CAACC,WAAS,EAACC,QAAS,EAAG2C,QAAS,EAAGZ,MAAO,QAC3CpD,IAAAmD,cAAChC,IAAI,CAACiF,MAAI,EAAC7E,GAAI,GACV6O,EAAQjD,OAAS,GAClBnN,IAAAmD,cAAA,OAAK6C,MAAO,CAAClF,QAAS,OAAQ8Q,eAAgB,OAAQxO,MAAO,QACzDpD,IAAAmD,cAAC0O,KAAM,CACHvN,QA5CD,WACvB,GAAI8L,EAAQjD,OAAS,EAAG,CACpB,IAAM2E,EACF1B,GAASA,EAAQ2B,QAAQ/B,GAAkB,GAAKI,EAAQjD,QAC5D8C,EAAkB6B,KAyCEtR,QAAQ,YACX,sBAMTR,IAAAmD,cAAChC,IAAI,CAACiF,MAAI,EAAC7E,GAAI,EAAGuC,WAAY,SAC1B9D,IAAAmD,cAAA,OAAK6C,MAAO,CAAClF,QAAS,OAAQ8Q,eAAgB,QAASxO,MAAO,SAC1DpD,IAAAmD,cAACc,IAAU,CACP+N,KAAK,MACL9N,MAAM,UACNI,QAASuL,GAET7P,IAAAmD,cAAC8O,KAAS,UAKzBjC,GACGhQ,IAAAmD,cAAC+O,IAAM,CACHC,OAAO,EACP1O,IAAKsM,EACLqC,iBAAiB,aACjBC,iBAAkB,CACdhB,SAAUrB,GAEdhK,MAAO,CAAC5C,MAAO,WAI3BpD,IAAAmD,cAACmP,IAAa,KACVtS,IAAAmD,cAAA,OAAK6C,MAAO,CAAClF,QAAS,OAAQ8Q,eAAgB,SAAUxO,MAAO,SAC3DpD,IAAAmD,cAAC0O,KAAM,CACHvN,QApFE,WAClB,IAAMiO,EAAWxC,EAAUpM,QAAQ6O,gBACnC1C,EAAUyC,IAmFM/R,QAAQ,YACR0D,MAAM,UACNuO,UAAWzC,EACX0C,UAAW1S,IAAAmD,cAACwP,KAAe,OAC9B,gDCfNC,GAtFG,WAAM,IAAA9P,EACgBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA5C+P,EAAU7P,EAAA,GAAE8P,EAAa9P,EAAA,GAAAkN,EACUnN,mBAAS,MAAKoN,EAAAlN,YAAAiN,EAAA,GAAlC6C,GAAF5C,EAAA,GAAkBA,EAAA,IAAA6C,EAEVjQ,mBAAS,IAAGkQ,EAAAhQ,YAAA+P,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAUvQ,iBAAO,MAuCvB,OAnBAyN,oBAAU,WAEN,IAAM+C,EAAe,WACJD,EAAQzP,QAIhBqC,MAAMsN,oBAAmB,2BAAAC,OAFT,IAEmD,cAM5E,OAHAF,IAEAG,OAAOC,iBAAiB,SAAUJ,GAC3B,WACHG,OAAOE,oBAAoB,SAAUL,KAE1C,IAICrT,IAAAmD,cAAA,WACInD,IAAAmD,cAACsM,GAAY,CAACG,KAAMiD,EAAYhD,QAAS,kBAAMiD,GAAc,IAAQhD,UAvCvD,SAAC6D,GACnBZ,EAAiBY,GACjBR,EAAU,SAACS,GAAU,SAAAL,OAAAM,YAASD,GAAU,CAAED,SAuCtC3T,IAAAmD,cAAA,OACIM,IAAK2P,EACLpN,MAAO,CACHlF,QAAS,OACTgT,IAAK,SAGRZ,EAAOjC,IAAI,SAAC0C,EAAOI,GAAK,OACrB/T,IAAAmD,cAAA,OAAKqE,IAAKuM,EAAO/N,MAAO,CAAE3F,SAAU,aAChCL,IAAAmD,cAAA,OAAK6Q,IAAKL,EAAOM,IAAG,QAAAV,OAAUQ,GAAS/N,MAAO,CAAE5C,MAAO,UACvDpD,IAAAmD,cAAA,UACImB,QAAS,kBA9Cb,SAACyP,GACjB,IAAMG,EAAaL,YAAOX,GAC1BgB,EAAcC,OAAOJ,EAAO,GAC5BZ,EAAUe,GA2CyBE,CAAYL,IAC3B/N,MAAO,CACH3F,SAAU,WACVgU,OAAQ,OACRC,KAAM,OACNC,gBAAiB,QACjBvQ,QAAS,MACTwQ,aAAc,QAGlBxU,IAAAmD,cAACsR,KAAU,CAACzO,MAAO,CAAE9B,MAAO,eAM5ClE,IAAAmD,cAAC0O,KAAM,CACHrR,QAAS,YACT8D,QAzDO,WACfwO,GAAeD,IAyDPH,UAAW1S,IAAAmD,cAACuR,KAAM,OACrB,WCvEAC,GAAkB,CAAC,SAAO,cAAY,OAAQ,QAAS,gBAAc,QAAS,aAAc,WAAY,UACjH,WAESC,GAAiB,GAAArB,OAAOoB,GAAe,CAAE,UAAW,KAAM,gBAAc,cAAe,aAAc,wBAAyB,YAE9HE,GAAW,GAAAtB,OAAAM,YAAOe,IAAiB,CAAE,iBAAkB,eAAgB,YAAa,sBAEpFE,GAAkB,CAAC,QAAS,QAAS,WAAS,OAAQ,UAAW,aAEjEC,GAAkB,CAAC,SAAO,QAAS,WAAY,YAAa,WAY1D,SAASC,GAAOjV,GAU3B,IAVkC,IAAAmF,EAEFlF,WAAe,IAAGmF,EAAAlC,YAAAiC,EAAA,GAA3C+P,EAAQ9P,EAAA,GAAE+P,EAAW/P,EAAA,GAC5BG,EACwBtF,YAAe,GAAKuF,EAAAtC,YAAAqC,EAAA,GAArCsK,EAAIrK,EAAA,GAAE4P,EAAO5P,EAAA,GAEhB6P,EAAgBrV,EAAMqV,cACtBC,EAAYtV,EAAMsV,UAGbjI,EAAI,EAAGA,EAAIiI,EAAWjI,IAC3BgI,EAAgBA,EAAc7B,OAAO,CAAC,KAG1C,GAAwB,IAApB0B,EAAS9H,OACT,IAAK,IAAIC,EAAI,EAAGA,EAAIgI,EAAcjI,OAAQC,IACtC6H,EAAS7H,GAAK,CAACzL,MAAOyT,EAAchI,GAAIhI,MAAO,GAIvD,SAASkQ,EAAiB5T,EAAIC,EAAOyD,GACjCa,QAAQC,IAAI,oBAAsBxE,EAAK,UAAiB0D,GACxD,IAAImQ,EAAS1B,YAAOoB,GACpBM,EAAU7T,GAAM,CAACC,MAAOA,EAAOyD,MAAOA,GACtCmQ,EAAU7T,GAAM,CAACC,QAAOyD,SACxB8P,EAAYK,GAGhB,SAASC,EAAYC,GACjBN,GAASvF,GAIb,OADA3J,QAAQC,IAAI,WAAanG,EAAM0C,KAAO,SAAWmN,IACpC,IAATA,EAEI5P,gBAACW,IAAK,CAACT,GAAI,CACPU,EAAG,EACHC,EAAG,EACHC,QAAS,OACTC,cAAe,SACfC,SAAU,OACVC,UAAW,MAEXjB,gBAACmB,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGqU,YAAa,GACrC1V,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,IAAI,IAACvB,gBAACO,IAAU,CAACC,QAAQ,MAAMT,EAAM0C,KAAK,sBACzDzC,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GACXvB,gBAACiE,IAAU,CAACC,MAAM,UAAUI,QAASkR,GAAaxV,gBAAC2V,IAAU,UAQzE3V,gBAACW,IAAK,CAACT,GAAI,CACPU,EAAG,EACHC,EAAG,EACHC,QAAS,OACTC,cAAe,SACfC,SAAU,OACVC,UAAW,MAGXjB,gBAACmB,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGqU,YAAa,EAAG5R,WAAW,UACnD9D,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,IAAI,IAACvB,gBAACO,IAAU,CAACC,QAAQ,MAAMT,EAAM0C,OACpDzC,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GACXvB,gBAACiE,IAAU,CAACC,MAAM,UAAUI,QAASkR,GAAaxV,gBAAC4V,IAAa,QAEpE5V,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIkD,GAAI,GACnBzE,gBAACyB,IAAS,CAACC,GAAG,oBAAiBC,MAAM,oBAAiBC,UAAU,EACrDC,WAAW,EAAMC,KAAK,OACtBC,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRC,eACIlC,gBAACmC,IAAc,CAAC9B,SAAS,SACrBL,gBAAC6V,IAAQ,WAMpC7V,gBAACmB,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIkD,GAAI,GACnBzE,gBAAC8V,IAAS,KAAC9V,gBAAC+V,IAAgB,CAACC,QAAShW,gBAACiW,IAAM,MAChBtU,MAAM,oBAG3C3B,gBAACC,IAAG,CAACC,GAAI,CAACU,EAAG,EAAGC,EAAG,IACdoU,EAAShE,IAAI,SAACiF,EAASnC,GACpB,OACI/T,gBAACiF,EAAQ,CAACvD,GAAIqS,EAAOpS,MAAOuU,EAAQvU,MAAO6E,IAAK8O,OAK5DtV,gBAACmW,IAAO,MACRnW,gBAACC,IAAG,CAACC,GAAI,CAACW,EAAG,IACTb,gBAACyB,IAAS,CAACI,WAAS,EAACuU,WAAS,EAACC,KAAM,EAAG1U,MAAM,yBAElD3B,gBAACC,IAAG,CAACC,GAAI,CAACW,EAAG,IACTb,gBAAC4S,GAAS,QCpIf,SAAS0D,GAAYvW,GAGhC,OACOC,2BAAA,KACIA,gBAACgV,GAAM,CAACvS,KAAK,OAAO4S,UAAW,EAAGD,cAAeT,GAAiB/E,KAAM7P,EAAM6P,OAC9E5P,gBAACgV,GAAM,CAACvS,KAAK,WAAQ4S,UAAW,EAAGD,cAAeT,GAAiB/E,KAAM7P,EAAM6P,OAC/E5P,gBAACgV,GAAM,CAACvS,KAAK,aAAa4S,UAAW,EAAGD,cAAeT,GAAiB/E,KAAM7P,EAAM6P,OACpF5P,gBAACgV,GAAM,CAACvS,KAAK,iBAAiB4S,UAAW,EAAGD,cAAeN,GAAiBlF,KAAM7P,EAAM6P,OACxF5P,gBAACgV,GAAM,CAACvS,KAAK,iBAAiB4S,UAAW,EAAGD,cAAeT,GAAiB/E,KAAM7P,EAAM6P,OACxF5P,gBAACgV,GAAM,CAACvS,KAAK,kBAAkB4S,UAAW,EAAGD,cAAeT,GAAiB/E,KAAM7P,EAAM6P,OACzF5P,gBAACgV,GAAM,CAACvS,KAAK,KAAK4S,UAAW,EAAGD,cAAeP,GAAajF,KAAM7P,EAAM6P,OACxE5P,gBAACgV,GAAM,CAACvS,KAAK,cAAW4S,UAAW,EAAGD,cAAeR,GAAmBhF,KAAM7P,EAAM6P,OACpF5P,gBAACgV,GAAM,CAACvS,KAAK,cAAc4S,UAAW,EAAGD,cAAeR,GAAmBhF,KAAM7P,EAAM6P,OACvF5P,gBAACgV,GAAM,CAACvS,KAAK,SAAS4S,UAAW,EAAGD,cAAeL,GAAkBnF,KAAM7P,EAAM6P,sBCJzF,SAAS2G,KAEZ,IAAMC,EAAe3T,mBAErB,OACI7C,gBAAA,WACIA,gBAACyW,GAAG,CAAChT,IAAK+S,IAEVxW,gBAAC0W,IAAY,CAACC,QAAS,kBAAMH,EAAa7S,SAE5BiT,QAAS,WACL,OAAO5W,gBAACC,IAAG,CAACC,GAAI,CAACU,EAAG,IAAI,IAACZ,gBAAC6R,KAAM,CAACrR,QAAQ,YAAYqB,WAAW,EAC/B6Q,UAAW1S,gBAAC6W,KAAa,OAAI,gBAM3F,IAEKJ,GAAG,SAAAK,GAEL,SAAAL,EAAY1W,GAAO,IAAAgX,EAE4B,OAF5BC,YAAArN,KAAA8M,GACfM,EAAAE,YAAAtN,KAAAuN,YAAAT,GAAAnN,KAAAK,KAAM5J,IACNkG,QAAQC,IAAI,YAAc6Q,EAAKhX,MAAM6P,MAAMmH,EAa9C,OAjBII,YAAAV,EAAAK,GAKJM,YAAAX,EAAA,EAAAjP,IAAA,SAAApC,MAAA,WAGG,OACIpF,gBAAA,WACIA,gBAACF,EAAY,MACbE,gBAACwC,EAAa,MACdxC,gBAACU,EAAU,MACXV,gBAACsW,GAAW,CAAC1G,KAAMjG,KAAK5J,MAAM6P,OAC9B5P,gBAACwE,EAAS,WAGrBiS,EAjBI,CAASzW,iBC3BLqX,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzX,IAAAmD,cAACnD,IAAM0X,WAAU,KACf1X,IAAAmD,cAACoT,GAAQ","file":"static/js/main.447c63ec.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nexport default function ButtonAppBar(props) {\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        Wohnungszustandsprotokoll (v0.9)\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { DoorFront, ElectricalServices, House, MarkunreadMailbox} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\n\r\nexport default function Schluessel() {\r\n    return (\r\n        <React.Fragment>\r\n            <Paper sx={{\r\n                p: 2,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    SchlÃ¼ssel\r\n                </Typography>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"hausschluessel\"\r\n                            label=\"HausschlÃ¼ssel\"\r\n                            required={true}\r\n                            fullWidth={true}\r\n                            type=\"number\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <House />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"wohnungschluessel\"\r\n                            label=\"WohnungschlÃ¼ssel\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <DoorFront />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"briefkastenschluessel\"\r\n                            label=\"Briefkasten\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MarkunreadMailbox />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n\r\n                            id=\"hausanschlussschluessel\"\r\n                            label=\"Hausanschluss\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ElectricalServices />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nexport default function ProtokollKopf() {\r\n    return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Wohnungsdaten\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"wohnung\"\r\n                        name=\"Wohnung\"\r\n                        label=\"Wohnung\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"datum\"\r\n                        name=\"Datum\"\r\n                        label=\"Datum\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"mietername\"\r\n                        name=\"mietername\"\r\n                        label=\"Name Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <TextField\r\n                        required\r\n                        id=\"email_mieter\"\r\n                        name=\"email_mieter\"\r\n                        label=\"EMail Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"vermieter\"\r\n                        name=\"vermieter\"\r\n                        label=\"Vermieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n            </Grid>\r\n            </Paper>\r\n    );\r\n}","import React, {useRef, useState} from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {DeleteOutline} from \"@mui/icons-material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\n\r\n\r\nexport default function SignatureBox( props ) {\r\n\r\n    const sigRef = useRef();\r\n    const [signature, setSignature] = useState(null);\r\n\r\n    const handleSignatureEnd = () => {\r\n        setSignature(sigRef.current.toDataURL());\r\n    }\r\n    const clearSignature = () => {\r\n        sigRef.current.clear();\r\n        setSignature(null);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} width=\"100%\">\r\n                <Paper sx={{\r\n                    p: 1,\r\n                    m: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxWidth: \"100%\",\r\n                    elevation: \"2\",\r\n                }}>\r\n                    <SignatureCanvas\r\n                        penColor=\"black\"\r\n                        canvasProps={{className: 'signature'}}\r\n                        ref={sigRef}\r\n                        onEnd={handleSignatureEnd}\r\n                    />\r\n                    <Grid container spacing={0} direction=\"row\" alignItems=\"baseline\" margin={0}>\r\n                        <Grid item xs={3} padding={0} >\r\n                            <IconButton color=\"primary\" aria-label=\"delete pad\" size=\"large\">\r\n                                <DeleteOutline onClick={clearSignature}/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Typography variant=\"body1\" gutterBottom>\r\n                                Unterschrift Mieter\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};","import Paper from \"@mui/material/Paper\";\r\n\r\nimport React, {useRef, useState} from \"react\";\r\nimport SignatureCanvas from 'react-signature-canvas'\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {DeleteOutline} from \"@mui/icons-material\";\r\nimport SignatureBox from \"./SignatureBox\";\r\n\r\nfunction DeleteIcon() {\r\n    return null;\r\n}\r\n\r\nexport default function Signature() {\r\n\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} md={6} width=\"100%\" >\r\n                   <SignatureBox title=\"Unterschrift Mieter\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                    <SignatureBox title=\"Unterschrift Vermieter\" />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n};","import {Rating} from \"@mui/material\";\r\nimport { FiberManualRecord} from \"@mui/icons-material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst labels = {\r\n    1: 'defekt', 2: 'stark gebraucht', 3: 'gebraucht', 4: 'neuwertig', 5: 'neu',\r\n};\r\n\r\n\r\n/**\r\n * Eine Inventar eines ZimmerListe. Ein Inventar ist z.B. eine TÃ¼r oder eine Steckdose.\r\n * Jees Inventar hat innerhalb des Zimmers einen eindeutigen Namen und einen Wert / Status.\r\n * Dieser Status gibt den Zustand des Inventares an.\r\n *\r\n * @param {Object} props - Property object\r\n * @param {id} props.id - id des Inventares aus der Inventarliste\r\n * @param {id} props.label - der Name des Inventares aus der Inventarliste\r\n * @param {id} props.value - Gebrauchtstatus des Inventars\r\n * @param {id} props.set - Funktion zum setzen eines neuen Wertes set(<id>,<wert>)\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Inventar(props) {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const [ratingColor, setRatingColor] = React.useState(\"grey\");\r\n    let icon = <FiberManualRecord color=\"white\"  fontSize=\"inherit\" />;\r\n\r\n    function newLabel( label ) {\r\n        props.set( props.id, label, props.value);\r\n    }\r\n\r\n    function getLabelText()  {\r\n        let retValue;\r\n        if( labels[value] )\r\n            retValue = props.label + \" (\" + labels[value] + \")\";\r\n        else\r\n            retValue = props.label ;\r\n\r\n        return retValue;\r\n    }\r\n\r\n\r\n\r\n    function handleMouseMove(event, newValue) {\r\n        switch( newValue ) {\r\n            case 1 :\r\n                setRatingColor(\"orange\");\r\n                break;\r\n            case 2 :\r\n                setRatingColor(\"yellow\");\r\n                break;\r\n            case 3 :\r\n                setRatingColor(\"grey\");\r\n                break;\r\n            case 4 :\r\n                setRatingColor(\"green\");\r\n                break;\r\n            case 5 :\r\n                setRatingColor(\"green\");\r\n                break;\r\n\r\n            default:\r\n                setRatingColor(\"grey\");\r\n        }\r\n        icon = <FiberManualRecord style={{color: ratingColor}}  fontSize=\"inherit\" />;\r\n        console.log(\"log \" + newValue +  \" \" + icon);\r\n    }\r\n\r\n    // wenn das Textfeld keinen Wert hat, dann kann dieser eingegeben werden. Ansonsten ist\r\n    // der Wert/ Name des Textfeldes fest definiert\r\n    let readonly = props.label !== \"\";\r\n\r\n    console.log(\"redraw\");\r\n\r\n    return (<>\r\n        <Grid container spacing={1} padding={1} width={\"100%\"}>\r\n            <Grid iten xs={8} >\r\n                <TextField fullWidth={true}\r\n                           sx={{paddingTop: 0}}\r\n                           InputProps={{\r\n                               readOnly: readonly,\r\n                               padding: \"0px\"\r\n                           }}\r\n                           onChange={(event, newValue) => {\r\n                               newLabel(newValue);\r\n                           }}\r\n                           value={getLabelText()}\r\n                           variant=\"standard\" />\r\n            </Grid>\r\n            <Grid  item xs={4} >\r\n                <Rating\r\n                    name=\"hover-feedback\"\r\n                    value={value}\r\n                    precision={1}\r\n                    defaultValue={0}\r\n\r\n                    onChangeActive={handleMouseMove}\r\n                    onMouseLeave={handleMouseMove}\r\n                    icon={icon}\r\n                    emptyIcon={icon}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue)\r\n                    }}\r\n                />\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    </>);\r\n}","import React, {useState, useRef, useEffect} from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst WebcamDialog = ({ open = true, onClose, onCapture }) => {\r\n\r\n\r\n    const webcamRef = useRef(null);\r\n    const [selectedCamera, setSelectedCamera] = useState('');\r\n    const [cameras, setCameras] = useState([]);\r\n\r\n    const handleCapture = () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        onCapture(imageSrc);\r\n    };\r\n\r\n    const handleCameraSwitch = () => {\r\n        if (cameras.length > 1) {\r\n            const newCamera =\r\n                cameras[(cameras.indexOf(selectedCamera) + 1) % cameras.length];\r\n            setSelectedCamera(newCamera);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getCameras = async () => {\r\n            try {\r\n                const devices = await navigator.mediaDevices.enumerateDevices();\r\n                devices.map((device) => { console.log(device.label); });\r\n\r\n                const videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n                const deviceIds = videoDevices.map((device) => device.deviceId);\r\n                setCameras(deviceIds);\r\n                console.log(\"Cameras found \" + videoDevices.length );\r\n\r\n                if (videoDevices.length > 0) {\r\n                    setSelectedCamera(videoDevices[0].deviceId);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Fehler beim Abrufen der Kameras:\", error);\r\n            }\r\n        };\r\n\r\n        if (open) {\r\n            getCameras().then();\r\n        }\r\n    }, [open]);\r\n\r\n    console.log(\"WebcamDialog render = \" + open + \" selected? => '\" + selectedCamera + \" Kameras + length: \" + cameras.length);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n            <DialogContent>\r\n                <Grid container spacing={1} padding={1} width={\"100%\"}>\r\n                    <Grid iten xs={6}>\r\n                        {cameras.length > 1 && (\r\n                        <div style={{display: \"flex\", justifyContent: \"left\", width: \"45%\"}}>\r\n                            <Button\r\n                                onClick={handleCameraSwitch}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                Kamera wÃ¤hlen\r\n                            </Button>\r\n                        </div>\r\n                            )}\r\n                    </Grid>\r\n                    <Grid iten xs={6} alignItems={\"right\"}>\r\n                        <div style={{display: \"flex\", justifyContent: \"right\", width: \"100%\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={onClose}\r\n                            >\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                {selectedCamera && (\r\n                    <Webcam\r\n                        audio={false}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        videoConstraints={{\r\n                            deviceId: selectedCamera,\r\n                        }}\r\n                        style={{width: \"100%\"}}\r\n                    />\r\n                )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", width: \"100%\"}}>\r\n                    <Button\r\n                        onClick={handleCapture}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={!selectedCamera}\r\n                        startIcon={<PhotoCameraIcon/>}\r\n                    >\r\n                        Aufnehmen\r\n                    </Button>\r\n                </div>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default WebcamDialog;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport WebcamDialog from \"./WebcamDialog\"; // Importieren Sie Ihre Webcam-Dialog-Komponente hier\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Camera} from \"@mui/icons-material\"; // Importieren Sie das LÃ¶schen-Icon\r\n\r\nconst ImageGrid = () => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [capturedImage, setCapturedImage] = useState(null);\r\n\r\n    const [images, setImages] = useState([]);\r\n    const gridRef = useRef(null);\r\n\r\n    const handleCapture = (image) => {\r\n        setCapturedImage(image);\r\n        setImages((prevImages) => [...prevImages, image]);\r\n    };\r\n\r\n\r\n    const deleteImage = (index) => {\r\n        const updatedImages = [...images];\r\n        updatedImages.splice(index, 1);\r\n        setImages(updatedImages);\r\n    };\r\n\r\n\r\n    const showCamera = () => {\r\n        setOpenDialog(!openDialog);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // Wenn sich die FenstergrÃ¶Ãe Ã¤ndert, berechnen Sie die Anzahl der Bilder pro Zeile basierend auf der Fensterbreite.\r\n        const handleResize = () => {\r\n            const grid = gridRef.current;\r\n            // const containerWidth = grid.offsetWidth;\r\n            const minImageSize = 240; // MindestgrÃ¶Ãe fÃ¼r Bilder\r\n            // const minImagesPerRow = Math.floor(containerWidth / minImageSize);\r\n            grid.style.gridTemplateColumns = `repeat(auto-fit, minmax(${minImageSize}px, 1fr))`;\r\n        };\r\n\r\n        handleResize(); // Initialisieren Sie das Grid basierend auf der aktuellen FenstergrÃ¶Ãe.\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <WebcamDialog open={openDialog} onClose={() => setOpenDialog(false)} onCapture={handleCapture} />\r\n\r\n            <div\r\n                ref={gridRef}\r\n                style={{\r\n                    display: \"grid\",\r\n                    gap: \"10px\",\r\n                }}\r\n            >\r\n                {images.map((image, index) => (\r\n                    <div key={index} style={{ position: \"relative\" }}>\r\n                        <img src={image} alt={`Bild ${index}`} style={{ width: \"100%\" }} />\r\n                        <button\r\n                            onClick={() => deleteImage(index)}\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                bottom: \"10px\",\r\n                                left: \"10px\",\r\n                                backgroundColor: \"white\",\r\n                                padding: \"5px\",\r\n                                borderRadius: \"50%\",\r\n                            }}\r\n                        >\r\n                            <DeleteIcon style={{ color: \"blue\" }} />\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n                variant={\"contained\"}\r\n                onClick={showCamera}\r\n                startIcon={<Camera/>}\r\n            >\r\n                Fotos\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import * as React from \"react\";\r\n\r\nimport {Divider, FormControlLabel, FormGroup, InputAdornment, Switch} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Inventar from \"./Inventar\";\r\nimport {Delete, Gradient, Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ImageGrid from \"./ImageGrid\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\n\r\nexport const Inventar_Zimmer = [\"TÃ¼r\", \"TÃ¼rzarge\", \"Wand\", \"Boden\", \"FuÃleisten\", \"Decke\", \"Steckdosen\", \"Schalter\", \"Heizung\",\r\n    \"Fenster\"];\r\n\r\nexport const Inventar_GÃ¤ste_WC = [...Inventar_Zimmer, \"WC-Sitz\", \"WC\", \"SpÃ¼lkasten\", \"Waschbecken\", \"Wasserhahn\", \"Toilettenpapierhalter\", \"Spiegel\"];\r\n\r\nexport const Inventar_WC = [...Inventar_GÃ¤ste_WC, \"Duschtrennwand\", \"Duschvorhang\", \"Badewanne\", \"Badewannenarmatur\"];\r\n\r\nexport const Inventar_Balkon = [\"Boden\", \"Decke\", \"WÃ¤nde\", \"Glas\", \"Fenster\", \"Oberlicht\"];\r\n\r\nexport const Inventar_Keller = [\"TÃ¼r\", \"Boden\", \"Schalter\", \"Steckdose\", \"Fenster\"];\r\n\r\n\r\n/**\r\n *\r\n * @param schlÃ¼ssel {boolean} gibt an ob der Raum einen SchlÃ¼ssel hat\r\n * @param heizungszÃ¤hler {boolean} gibt an ob der Raum eine Heizung hat\r\n * @param inventarListe {array} Liste des Inventars, dass kontrolliert werden soll\r\n * @param sonstiges {number} Anzahl der Zusatzfelder\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Zimmer(props) {\r\n\r\n    const [inventar, setInventar] = React.useState([]);\r\n    // Darstellung des InventarDialogs\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    let inventarListe = props.inventarListe;\r\n    let sonstiges = props.sonstiges;\r\n\r\n    // Sortieren des Array.\r\n    for (let i = 0; i < sonstiges; i++)\r\n        inventarListe = inventarListe.concat(['']);\r\n\r\n    // initialisiere Inventar\r\n    if (inventar.length === 0) {\r\n        for (let i = 0; i < inventarListe.length; i++) {\r\n            inventar[i] = {label: inventarListe[i], value: 0};\r\n        }\r\n    }\r\n\r\n    function setInventarValue(id, label, value) {\r\n        console.log(\"setInventarValue \" + id + \" \" + \"label \" + value);\r\n        let localList = [...inventar];\r\n        localList[id] = {label: label, value: value};\r\n        localList[id] = {label, value};\r\n        setInventar(localList);\r\n    }\r\n\r\n    function handleClick(e) {\r\n        setOpen(!open);\r\n    }\r\n\r\n    console.log(\"Zimmer: \" + props.name + \" open \" + open);\r\n    if (open === false)\r\n        return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Grid container spacing={1} paddingLeft={1} >\r\n                    <Grid item xs={11}> <Typography variant=\"h6\">{props.name} (nicht relevant)</Typography></Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleClick}><Visibility/></IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n        )\r\n    else\r\n        return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n\r\n                <Grid container spacing={1} paddingLeft={1} alignItems=\"center\">\r\n                    <Grid item xs={11}> <Typography variant=\"h6\">{props.name}</Typography></Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleClick}><VisibilityOff/></IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TextField id=\"heizungszÃ¤hler\" label=\"HeizungszÃ¤hler\" required={true}\r\n                                   fullWidth={true} type=\"text\"\r\n                                   InputLabelProps={{\r\n                                       shrink: true,\r\n                                   }}\r\n                                   InputProps={{\r\n                                       startAdornment: (\r\n                                           <InputAdornment position=\"start\">\r\n                                               <Gradient/>\r\n                                           </InputAdornment>\r\n                                       ),\r\n                                   }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <FormGroup><FormControlLabel control={<Switch/>}\r\n                                                     label=\"SchlÃ¼ssel\"/></FormGroup>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{p: 0, m: 1 }}>\r\n                    {inventar.map((element, index) => {\r\n                        return (\r\n                            <Inventar id={index} label={element.label} set={setInventarValue}/>\r\n                        )\r\n                    })\r\n                    }\r\n                </Box>\r\n                <Divider/>\r\n                <Box sx={{m: 1}}>\r\n                    <TextField fullWidth multiline rows={3} label=\"Zusatzinformationen\"></TextField>\r\n                </Box>\r\n                <Box sx={{m: 1}}>\r\n                    <ImageGrid></ImageGrid>\r\n                </Box>\r\n            </Paper>\r\n\r\n        );\r\n\r\n}","\r\nimport * as React from \"react\";\r\nimport Zimmer, {Inventar_Balkon, Inventar_GÃ¤ste_WC, Inventar_Keller, Inventar_WC, Inventar_Zimmer} from \"./Zimmer\";\r\n\r\nexport default function ZimmerListe(props) {\r\n\r\n\r\n    return (\r\n           <>\r\n               <Zimmer name=\"Flur\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"KÃ¼che\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Wohnzimmer\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Balkon/ Loggia\" sonstiges={3} inventarListe={Inventar_Balkon} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer I\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer II\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"WC\" sonstiges={3} inventarListe={Inventar_WC} open={props.open}/>\r\n               <Zimmer name=\"GÃ¤ste-WC\" sonstiges={3} inventarListe={Inventar_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Abstellraum\" sonstiges={3} inventarListe={Inventar_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Keller\" sonstiges={3} inventarListe={Inventar_Keller}  open={props.open}/>\r\n           </>\r\n    );\r\n}\r\n","import './App.css';\nimport * as React from \"react\";\nimport {useRef} from \"react\";\nimport ReactToPrint from 'react-to-print';\nimport ButtonAppBar from \"./components/AppBar\";\nimport Schluessel from \"./components/Schluessel\";\nimport Box from \"@mui/material/Box\";\nimport ProtokollKopf from \"./components/ProtokollKopf\";\nimport Signature from \"./components/Signature\";\nimport ZimmerListe from \"./components/ZimmerListe\";\nimport Button from \"@mui/material/Button\";\nimport {PrintOutlined} from \"@mui/icons-material\";\n\n\nexport function PrintApp() {\n\n    const componentRef = useRef();\n\n    return (\n        <div>\n            <App ref={componentRef} />\n\n            <ReactToPrint content={() => componentRef.current }\n\n                          trigger={() => {\n                              return <Box sx={{p: 1}}> <Button variant=\"contained\" fullWidth={true}\n                                                               startIcon={<PrintOutlined/>}>Drucken</Button></Box>;\n                          }}\n            />\n\n        </div>\n    );\n}\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        console.log(\"App open \" + this.props.open);\n    }\n\n    render() {\n        return (\n            <div>\n                <ButtonAppBar/>\n                <ProtokollKopf/>\n                <Schluessel/>\n                <ZimmerListe open={this.props.open}/>\n                <Signature/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {PrintApp} from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <PrintApp />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
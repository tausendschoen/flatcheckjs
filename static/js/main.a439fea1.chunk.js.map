{"version":3,"sources":["components/AppBar.js","components/Schluessel.js","components/HeaderContext.js","components/ProtokollKopf.js","components/helperFunctions.js","components/SignatureBox.js","components/Signature.js","components/Inventar.js","components/WebcamDialog.js","components/ImageGrid.js","components/Zimmer.js","components/ZimmerListe.js","App.js","index.js"],"names":["version","ButtonAppBar","props","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","anchorEl","setAnchorEl","handleClose","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","mr","onClick","event","currentTarget","MenuIcon","Menu","id","onClose","MenuListProps","aria-labelledby","MenuItem","Typography","variant","component","Schluessel","Paper","p","m","display","flexDirection","maxWidth","elevation","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","label","required","fullWidth","type","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","House","DoorFront","MarkunreadMailbox","ElectricalServices","HeaderContext","createContext","HeaderDispatchContext","headerContextData","mieter","vermieter","dataReducer","headerContext","dispatch","action","_objectSpread","value","ProtokollKopf","useContext","_useState","useState","currentDateTime","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","concat","getCurrentDate","_useState2","dateTime","setValue","target","name","autoComplete","Apartment","CalendarToday","Contacts","onChange","e","Person","AddLocation","Email","ize","Group","SignatureBox","sigRef","useRef","createElement","width","background","SignatureCanvas","penColor","ref","clearOnResize","canvasProps","height","className","onEnd","style","alignItems","justifyContent","DeleteOutline","current","clear","paddingTop","title","Signature","md","labels","1","2","3","4","5","Inventar","setLabel","_React$useState5","_React$useState6","error","setError","icon","FiberManualRecord","fontSize","borderColor","iten","paddingLeft","removeFnc","idx","Delete","Boolean","helperText","readOnly","console","log","checkFunction","checkLabel","trim","Rating","precision","defaultValue","emptyIcon","newValue","marginLeft","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","WebcamDialog","_ref","_ref$open","onCapture","webcamRef","selectedCamera","setSelectedCamera","_useState3","_useState4","cameras","setCameras","useEffect","_ref2","_asyncToGenerator","_callee","devices","videoDevices","deviceIds","_context","navigator","mediaDevices","getUserMedia","audio","video","enumerateDevices","map","device","filter","kind","deviceId","t0","apply","arguments","getCameras","Dialog","DialogContent","padding","newCamera","indexOf","Cameraswitch","CloseIcon","Webcam","screenshotFormat","videoConstraints","DialogActions","Button","imageSrc","getScreenshot","disabled","startIcon","PhotoCameraIcon","ImageGrid","images","deleteImageFnc","deleteFunction","gridRef","handleResize","gridTemplateColumns","window","addEventListener","removeEventListener","gap","image","index","src","alt","bottom","left","backgroundColor","borderRadius","DeleteIcon","createInventoryObjectList","InventoryListe","element","Inventory_Zimmer","Inventory_GÃ¤ste_WC","_toConsumableArray","Inventory_WC","Inventory_Balkon","Inventory_Keller","Inventory_Abstellraum","Zimmer","inventory","Inventory","setInventory","showComment","setShowComment","_React$useState7","_React$useState8","showDialog","setShowDialog","setImages","containsInventory","retValue","removeInventory","tmpInventory","splice","JSON","stringify","setInventoryValue","localList","handleFoldComponent","Visibility","marginRight","VisibilityOff","Gradient","FormGroup","FormControlLabel","control","Switch","set","AddCircle","EditNote","Camera","multiline","rows","prevImages","updatedImages","ZimmerListe","sonstiges","PrintApp","componentRef","_useReducer","useReducer","_useReducer2","headerData","Provider","App","ReactToPrint","content","trigger","marginBottom","PrintOutlined","_React$PureComponent","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_createClass","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a439fea1.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Menu, MenuItem} from \"@mui/material\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nconst version = \"0.1.9\";\r\n\r\nexport default function ButtonAppBar(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState( null );\r\n\r\n    const handleClick = (event) => {\r\n        setOpen(true);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2 }}\r\n                        onClick={handleClick}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"basic-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'basic-button',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={handleClose}>Version {version}</MenuItem>\r\n                    </Menu>\r\n\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        Wohnungszustandsprotokoll\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { DoorFront, ElectricalServices, House, MarkunreadMailbox} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\n\r\nexport default function Schluessel() {\r\n    return (\r\n        <React.Fragment>\r\n            <Paper sx={{\r\n                p: 2,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    SchlÃ¼ssel\r\n                </Typography>\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            id=\"hausschluessel\"\r\n                            label=\"HausschlÃ¼ssel\"\r\n                            required={true}\r\n                            fullWidth={true}\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <House />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            id=\"wohnungschluessel\"\r\n                            label=\"WohnungschlÃ¼ssel\"\r\n                            required={true}\r\n                            size=\"small\"\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <DoorFront />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"briefkastenschluessel\"\r\n                            label=\"Briefkasten\"\r\n                            required={true}\r\n                            size=\"small\"\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            variant=\"standard\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MarkunreadMailbox />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            id=\"hausanschlussschluessel\"\r\n                            label=\"Hausanschluss\"\r\n                            size=\"small\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ElectricalServices />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const HeaderContext = createContext(null);\r\nexport const HeaderDispatchContext = createContext(null);\r\n\r\nexport const headerContextData = {\r\n    mieter : '',\r\n    vermieter: ''\r\n};\r\n\r\nexport const dispatchType = { action: \"\", value: \"\" };\r\n\r\n\r\nexport function dataReducer(headerContext, dispatch) {\r\n    if( dispatch.action === \"mieter\")\r\n        return {...headerContext, mieter: dispatch.value };\r\n    else\r\n        return {...headerContext, vermieter: dispatch.value };\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport {InputAdornment} from \"@mui/material\";\r\nimport {\r\n    AddLocation,\r\n    Apartment,\r\n    CalendarToday,\r\n    Contacts,\r\n    Email,\r\n    Gradient,\r\n    Group,\r\n    Person,\r\n    Place\r\n} from \"@mui/icons-material\";\r\n\r\nimport {HeaderContext, HeaderDispatchContext} from \"./HeaderContext\";\r\nimport {useContext, useState} from \"react\";\r\nimport {getCurrentDate, getCurrentDateTime} from \"./helperFunctions\";\r\n\r\n\r\nexport default function ProtokollKopf() {\r\n\r\n    const headerContext = useContext(HeaderContext);\r\n    const dispatch = useContext(HeaderDispatchContext);\r\n    const [dateTime, setDateTime] = useState(getCurrentDate());\r\n\r\n    function setValue( event, type ) {\r\n        if( type === \"mieter\" )\r\n            dispatch({action: \"mieter\", value: event.target.value})\r\n        else\r\n            dispatch({action: \"vermieter\", value: event.target.value})\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Paper sx={{\r\n            p: 1,\r\n            m: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            maxWidth: \"100%\",\r\n            elevation: \"2\",\r\n        }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Wohnungsdaten\r\n            </Typography>\r\n\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        size=\"small\"\r\n                        required\r\n                        id=\"wohnung\"\r\n                        name=\"Wohnung\"\r\n                        label=\"Wohnung\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                        variant=\"standard\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Apartment/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        size=\"small\"\r\n                        required\r\n                        id=\"datum\"\r\n                        name=\"Datum\"\r\n                        label=\"Datum\"\r\n                        type={\"date\"}\r\n                        value={dateTime}\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <CalendarToday/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"adresseWhg\"\r\n                        name=\"Adresse Wohnung\"\r\n                        label=\"Adresse Wohnung\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        size={\"small\"}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Contacts/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"mietername\"\r\n                        name=\"mietername\"\r\n                        label=\"Name Mieter\"\r\n                        fullWidth\r\n                        onChange={ (e) => setValue(e, \"mieter\") }\r\n                        variant=\"standard\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Person/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"neueAdresse\"\r\n                        name=\"neueAdresse\"\r\n                        label=\"Neue Adresse\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        size=\"small\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <AddLocation/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"email_mieter\"\r\n                        name=\"email_mieter\"\r\n                        label=\"EMail Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        size=\"small\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Email/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"teilneherVermieter\"\r\n                        name=\"vermieter\"\r\n                        label=\"Teilnehmer Vermieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        onChange={ (e) => setValue(e, \"vermieter\") }\r\n                        ize=\"small\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Group/>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}","export function getCurrentDateTime() {\r\n    const currentDateTime = new Date();\r\n    const year = currentDateTime.getFullYear();\r\n    const month = (currentDateTime.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = currentDateTime.getDate().toString().padStart(2, '0');\r\n    const hours = currentDateTime.getHours().toString().padStart(2, '0');\r\n    const minutes = currentDateTime.getMinutes().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n}\r\n\r\nexport function getCurrentDate() {\r\n    const currentDateTime = new Date();\r\n    const year = currentDateTime.getFullYear();\r\n    const month = (currentDateTime.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = currentDateTime.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n}","import React, {useRef} from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {DeleteOutline} from \"@mui/icons-material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\n\r\n\r\nexport default function SignatureBox(props) {\r\n\r\n    const sigRef = useRef();\r\n    // const [signature, setSignature] = useState(null);\r\n\r\n    const handleSignatureEnd = () => {\r\n        //setSignature(sigRef.current.toDataURL());\r\n    }\r\n    const clearSignature = () => {\r\n        sigRef.current.clear();\r\n        // setSignature(null);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} width=\"100%\">\r\n                <Paper sx={{\r\n                    background: '#EEE',\r\n                    p: 1,\r\n                    m: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxWidth: \"100%\",\r\n                    elevation: \"2\",\r\n                }}>\r\n                    <SignatureCanvas\r\n                        penColor=\"black\"\r\n                        ref={sigRef}\r\n                        clearOnResize={false}\r\n                        canvasProps={{height: 300, className: 'sigCanvas'}}\r\n                        onEnd={handleSignatureEnd}\r\n                    />\r\n                </Paper>\r\n\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <IconButton color=\"primary\" aria-label=\"delete pad\" size=\"large\">\r\n                        <DeleteOutline onClick={clearSignature}/>\r\n                    </IconButton>\r\n                    <Typography variant=\"body1\" gutterBottom sx={{paddingTop: \"0.5em\"}}>\r\n                        {props.title}\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};","\r\nimport React, {useContext} from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport SignatureBox from \"./SignatureBox\";\r\nimport {HeaderContext} from \"./HeaderContext\";\r\n\r\n\r\n\r\nexport default function Signature(props) {\r\n\r\n    const headerContextData = useContext(HeaderContext);\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} md={6} width=\"100%\" >\r\n                   <SignatureBox title={\"Unterschrift Mieter \"+ headerContextData.mieter} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <SignatureBox title={\"Unterschrift Vermieter \"+ headerContextData.vermieter} />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n};","import {Rating} from \"@mui/material\";\r\nimport {Delete, FiberManualRecord, Remove} from \"@mui/icons-material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nconst labels = {\r\n    1: 'defekt', 2: 'stark gebraucht', 3: 'gebraucht', 4: 'neuwertig', 5: 'neu',\r\n};\r\n\r\n\r\n/**\r\n * Eine Inventar eines ZimmerListe. Ein Inventar ist z.B. eine TÃ¼r oder eine Steckdose.\r\n * Jees Inventar hat innerhalb des Zimmers einen eindeutigen Namen und einen Wert / Status.\r\n * Dieser Status gibt den Zustand des Inventares an.\r\n *\r\n * @param {Object} props - Property object\r\n * @param {id} props.id - id des Inventares aus der Inventarliste\r\n * @param {id} props.label - der Name des Inventares aus der Inventarliste\r\n * @param {id} props.value - Gebrauchtstatus des Inventars\r\n * @param {id} props.set - Funktion zum setzen eines neuen Wertes set(<id>,<wert>)\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\n\r\nconst commonStyles = {\r\n    bgcolor: 'background.paper',\r\n    border: 1,\r\n    m: 1,\r\n    borderColor: 'text.primary',\r\n    width: '100%',\r\n};\r\n\r\n/**\r\n *\r\n * @returns {JSX.Element}\r\n * @constructor\r\n * @param {string} props.label - Der Name des Inventar\r\n * @param {number} props.idx - Der Index der Inventar in der Ã¼bergeordneten Lister\r\n */\r\nexport default function Inventar(props) {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const [label, setLabel] = React.useState(props.label);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    let icon = <FiberManualRecord color=\"white\" fontSize=\"inherit\"/>;\r\n\r\n    function checkLabel(label) {\r\n        if( props.checkFunction(label) ) {\r\n            setError(`Das Inventar '${label}' gibt es schon`);\r\n        } else\r\n            setError('');\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        let label = event.target.value;\r\n        console.log(`handleInputChange '${label}'`);\r\n        // Die Leerzeichen bleiben im Namen, weil der Anwender ev. noch weiterschreiben will\r\n        setLabel(label);\r\n        // hier werden die Leerzeichen rausgenommen\r\n        label = label ? label.trim() : label;\r\n        checkLabel(label);\r\n    };\r\n\r\n    function getLabelText() {\r\n        return (Boolean(label) && value) ? `${label} (${labels[value]})` : label;\r\n    }\r\n\r\n    return (\r\n            <Grid container spacing={1} sx={{paddingTop: 1}} color={\"black\"} borderColor={'primary.main'}>\r\n                <Grid iten xs={12} sm={6}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', paddingLeft: '0px' }}>\r\n                    <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => props.removeFnc(props.idx)}>\r\n                        <Delete/>\r\n                    </IconButton>\r\n                    <TextField fullWidth={true}\r\n                               sx={{paddingTop: 1, paddingLeft: 1}}\r\n                               error={Boolean(error)}\r\n                               helperText={error}\r\n                               InputProps={{\r\n                                   readOnly: false,\r\n                               }}\r\n                               size=\"medium\"\r\n                               onChange={handleInputChange}\r\n                               value={label}\r\n                               variant=\"standard\"/>\r\n                    </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <div style={{ display: 'flex', alignItems: 'center', paddingLeft: '0px' }}>\r\n                    <Rating\r\n                        name=\"hover-feedback\"\r\n                        value={value}\r\n                        precision={1}\r\n                        defaultValue={0}\r\n                        icon={icon}\r\n                        emptyIcon={icon}\r\n                        onChange={(event, newValue) => {\r\n                            setValue(newValue)\r\n                        }}\r\n                    />\r\n                    <Typography variant=\"body1\" component=\"div\" sx={{ marginLeft: 1 }}>{labels[value]}</Typography>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            );\r\n}","import React, {useState, useRef, useEffect} from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {Cameraswitch} from \"@mui/icons-material\";\r\n\r\nconst WebcamDialog = ({ open = true, onClose, onCapture }) => {\r\n\r\n\r\n    const webcamRef = useRef(null);\r\n    const [selectedCamera, setSelectedCamera] = useState('');\r\n    const [cameras, setCameras] = useState([]);\r\n\r\n    const handleCapture = () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        onCapture(imageSrc);\r\n    };\r\n\r\n    const handleCameraSwitch = () => {\r\n        if (cameras.length > 1) {\r\n            const newCamera =\r\n                cameras[(cameras.indexOf(selectedCamera) + 1) % cameras.length];\r\n            setSelectedCamera(newCamera);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getCameras = async () => {\r\n\r\n            try {\r\n                await navigator.mediaDevices.getUserMedia({audio: false, video: true});\r\n                let devices = await navigator.mediaDevices.enumerateDevices();\r\n                console.log(devices);\r\n\r\n                devices.map((device) => { console.log(device.label); return \"\";});\r\n                const videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n                const deviceIds = videoDevices.map((device) => device.deviceId);\r\n                setCameras(deviceIds);\r\n                console.log(\"Cameras found \" + videoDevices.length );\r\n\r\n                if (deviceIds.length > 0 && deviceIds[0] ) {\r\n                    setSelectedCamera(deviceIds[0]);\r\n                    console.log(`Camera selected ${deviceIds[0]}`);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Fehler beim Abrufen der Kameras:\", error);\r\n            }\r\n        };\r\n\r\n        if (open) {\r\n            getCameras().then();\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    console.log(`WebcamDialog render ${open} selected '${selectedCamera}' Kameras ${cameras.length}`);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n            <DialogContent>\r\n                <Grid container spacing={1} padding={1} width={\"100%\"}>\r\n                    <Grid iten xs={6}>\r\n                        {cameras.length > 1 && (\r\n                        <div style={{display: \"flex\", justifyContent: \"left\", width: \"45%\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={handleCameraSwitch}\r\n                            >\r\n                                <Cameraswitch/>\r\n                            </IconButton>\r\n                        </div>\r\n                            )}\r\n                    </Grid>\r\n                    <Grid iten xs={6} alignItems={\"right\"}>\r\n                        <div style={{display: \"flex\", justifyContent: \"right\", width: \"100%\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={onClose}\r\n                            >\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                {selectedCamera && (\r\n                    <Webcam\r\n                        audio={false}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        videoConstraints={{\r\n                            deviceId: selectedCamera,\r\n                        }}\r\n                        style={{width: \"100%\"}}\r\n                    />\r\n                )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", width: \"100%\"}}>\r\n                    <Button\r\n                        onClick={handleCapture}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={!selectedCamera}\r\n                        startIcon={<PhotoCameraIcon/>}\r\n                    >\r\n                        Aufnehmen\r\n                    </Button>\r\n                </div>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default WebcamDialog;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport WebcamDialog from \"./WebcamDialog\"; // Importieren Sie Ihre Webcam-Dialog-Komponente hier\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst ImageGrid = (props) => {\r\n\r\n    const images = props.images;\r\n    const deleteImageFnc = props.deleteFunction;\r\n\r\n    const gridRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Wenn sich die FenstergrÃ¶Ãe Ã¤ndert, berechnen Sie die Anzahl der Bilder pro Zeile basierend auf der Fensterbreite.\r\n        const handleResize = () => {\r\n            const grid = gridRef.current;\r\n            // const containerWidth = grid.offsetWidth;\r\n            const minImageSize = 400; // MindestgrÃ¶Ãe fÃ¼r Bilder\r\n            // const minImagesPerRow = Math.floor(containerWidth / minImageSize);\r\n            grid.style.gridTemplateColumns = `repeat(auto-fit, minmax(${minImageSize}px, 1fr))`;\r\n        };\r\n\r\n        handleResize(); // Initialisieren Sie das Grid basierend auf der aktuellen FenstergrÃ¶Ãe.\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n            <div\r\n                ref={gridRef}\r\n                style={{\r\n                    display: \"grid\",\r\n                    gap: \"10px\",\r\n                }}\r\n            >\r\n                {images.map((image, index) => (\r\n                    <div key={index} style={{ position: \"relative\" }}>\r\n                        <img src={image} alt={`Bild ${index}`} style={{ width: \"100%\" }} />\r\n                        <button\r\n                            onClick={() => deleteImageFnc(index)}\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                bottom: \"10px\",\r\n                                left: \"10px\",\r\n                                backgroundColor: \"white\",\r\n                                padding: \"5px\",\r\n                                borderRadius: \"50%\",\r\n                            }}\r\n                        >\r\n                            <DeleteIcon style={{ color: \"blue\" }} />\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import * as React from \"react\";\r\nimport {useState} from \"react\";\r\n\r\nimport {FormControlLabel, FormGroup, InputAdornment, Switch} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Inventar from \"./Inventar\";\r\nimport {AddCircle, Camera, EditNote, Gradient, Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ImageGrid from \"./ImageGrid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport WebcamDialog from \"./WebcamDialog\";\r\nimport CircularProgressWithLabel from \"./Circular\";\r\n\r\n\r\n// initialisiere Inventory\r\nfunction createInventoryObjectList(InventoryListe) {\r\n    let idx = 0;\r\n    return InventoryListe.map(element => ({idx: idx++, label: element, value: 0}));\r\n}\r\n\r\nexport const Inventory_Zimmer = createInventoryObjectList([\"TÃ¼r\", \"TÃ¼rzarge\", \"Wand\", \"Boden\", \"FuÃleisten\", \"Decke\", \"Steckdosen\", \"Schalter\", \"Heizung\",\r\n    \"Fenster\"]);\r\n\r\nexport const Inventory_GÃ¤ste_WC = createInventoryObjectList([...Inventory_Zimmer, \"WC-Sitz\", \"WC\", \"SpÃ¼lkasten\", \"Waschbecken\", \"Wasserhahn\", \"Toilettenpapierhalter\", \"Spiegel\"]);\r\n\r\nexport const Inventory_WC = createInventoryObjectList([...Inventory_GÃ¤ste_WC, \"Duschtrennwand\", \"Duschvorhang\", \"Badewanne\", \"Badewannenarmatur\"]);\r\n\r\nexport const Inventory_Balkon = createInventoryObjectList([\"Boden\", \"Decke\", \"WÃ¤nde\", \"Glas\", \"Fenster\", \"Oberlicht\"]);\r\n\r\nexport const Inventory_Keller = createInventoryObjectList([\"TÃ¼r\", \"Boden\", \"Schalter\", \"Steckdose\", \"Fenster\"]);\r\n\r\nexport const Inventory_Abstellraum = createInventoryObjectList([\"TÃ¼r\", \"TÃ¼rzarge\", \"Boden\", \"FuÃleisten\", \"Decke\", \"Schalter\", \"Steckdose\"]);\r\n\r\n\r\n/**\r\n *\r\n * @param props.InventoryListe {[string]} Liste des Inventorys in dem Zimmer\r\n *         Ein InventoryElement hat die Attribute id, label, value\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Zimmer(props) {\r\n\r\n    const [Inventory, setInventory] = React.useState(props.inventory);\r\n    // Darstellung des InventoryDialogs\r\n    const [open, setOpen] = React.useState(true);\r\n    const [showComment, setShowComment] = React.useState(false);\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n    const [images, setImages] = useState([]);\r\n\r\n\r\n    console.log(`Inventory....` + JSON.stringify(Inventory));\r\n\r\n/* wird ev. genutzt um zu prÃ¼fen ob alle Werte gesetzt sind\r\n    function fillState() {\r\n        let elements = Inventory.length;\r\n        let count = 0;\r\n        for( let item in Inventory ) {\r\n            count += item.\r\n        }\r\n    }\r\n    // <div style={{ marginRight: '10px' }}> <CircularProgressWithLabel value=\"0\"/></div>\r\n  */\r\n\r\n    function containsInventory(label) {\r\n        console.log(`containsInventory ${label}`)\r\n        let retValue = false;\r\n        for (let i in Inventory) {\r\n            console.log(`compare ${i} ${Inventory[i].label}`);\r\n            if (Inventory[i].label === label)\r\n                retValue = true;\r\n        }\r\n        console.log(`containsInventory ${label} ${retValue}`)\r\n        return retValue;\r\n    }\r\n\r\n    function addInventory() {\r\n        let tmpInventory = [...Inventory];\r\n        tmpInventory = tmpInventory.concat({id: tmpInventory.length, label: '', value: 0});\r\n        setInventory(tmpInventory);\r\n    }\r\n\r\n    function removeInventory(idx) {\r\n        let tmpInventory = [...Inventory];\r\n        tmpInventory.splice(idx, 1);\r\n        console.log(`removeInventory: ${Inventory[idx].label} Neue Liste: ` + JSON.stringify(tmpInventory));\r\n\r\n        setInventory(tmpInventory);\r\n    }\r\n\r\n\r\n    function setInventoryValue(id, label, value) {\r\n        console.log(`setInventoryValue: ${id}, ${label}, ${value},`);\r\n        let localList = [...Inventory];\r\n        localList[id] = {label: label, value: value};\r\n        setInventory(localList);\r\n    }\r\n\r\n    function handleFoldComponent() {\r\n        // toggle state\r\n        setOpen(!open);\r\n        setShowDialog(false);\r\n    }\r\n\r\n    const handleCapture = (image) => {\r\n        setImages((prevImages) => [...prevImages, image]);\r\n    };\r\n\r\n    const deleteImage = (index) => {\r\n        const updatedImages = [...images];\r\n        updatedImages.splice(index, 1);\r\n        setImages(updatedImages);\r\n    };\r\n\r\n    console.log(`Zimmer: ${props.name} Fold: ${open}  Camera Dialog: ${showDialog}`);\r\n\r\n    if (open === false)\r\n        return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Grid container spacing={1} paddingLeft={1}>\r\n                    <Grid item xs={11}>\r\n                        <Typography variant=\"h6\">{props.name} (nicht relevant)</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleFoldComponent}><Visibility/></IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n        )\r\n    else\r\n        return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n\r\n                <Grid container spacing={1} paddingLeft={1} alignItems=\"center\">\r\n                    <Grid item xs={11}>\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                           <Typography variant=\"h6\">{props.name}</Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton sx={{marginRight: '2'}} color=\"primary\" onClick={handleFoldComponent}><VisibilityOff/></IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TextField id=\"heizungszÃ¤hler\" label=\"HeizungszÃ¤hler\" required={true}\r\n                                   variant=\"standard\"\r\n                                   fullWidth={true} type=\"text\"\r\n                                   InputLabelProps={{\r\n                                       shrink: true,\r\n                                   }}\r\n                                   size=\"small\"\r\n                                   InputProps={{\r\n                                       startAdornment: (\r\n                                           <InputAdornment position=\"start\">\r\n                                               <Gradient/>\r\n                                           </InputAdornment>\r\n                                       ),\r\n                                   }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <FormGroup><FormControlLabel control={<Switch/>}\r\n                                                     label=\"SchlÃ¼ssel\"/></FormGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12} sx={{p: 0, m: 0}}>\r\n                        {Inventory.map((element) => {\r\n                            return (<Inventar key={element.idx} idx={element.idx} label={element.label}\r\n                                              set={setInventoryValue}\r\n                                              removeFnc={removeInventory} checkFunction={containsInventory}/>)\r\n                        })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Box sx={{m: 1}}>\r\n                    <Button startIcon={<AddCircle/>} sx={{marginRight: 1}}\r\n                            onClick={addInventory}>\r\n                        Inventar\r\n                    </Button>\r\n                    <Button startIcon={<EditNote/>} sx={{marginRight: 1}}\r\n                            onClick={() => setShowComment(!showComment)}>\r\n                        Hinweise\r\n                    </Button>\r\n                    <Button onClick={() => {\r\n                                        setShowDialog(true)\r\n                                    }}\r\n                            startIcon={<Camera/>}> Fotos </Button>\r\n                </Box>\r\n                <Box sx={{m: 1}}>\r\n                    {showComment && (<TextField fullWidth multiline rows={3} label=\"Hinweistext\"></TextField>)}\r\n                </Box>\r\n\r\n                {showDialog && (<WebcamDialog onClose={() => setShowDialog(false)} onCapture={handleCapture}/>)}\r\n                {Boolean(images) && (<ImageGrid images={images} deleteFunction={deleteImage}/>)}\r\n\r\n            </Paper>\r\n\r\n        );\r\n\r\n}","\r\nimport * as React from \"react\";\r\nimport Zimmer, {\r\n    Inventory_Abstellraum, Inventory_Balkon, Inventory_GÃ¤ste_WC, Inventory_Keller, Inventory_WC,\r\n    Inventory_Zimmer\r\n} from \"./Zimmer\";\r\n\r\nexport default function ZimmerListe(props) {\r\n\r\n\r\n    return (\r\n           <>\r\n               <Zimmer name=\"Flur\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"KÃ¼che\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Wohnzimmer\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Balkon/ Loggia\" sonstiges={3} inventory={Inventory_Balkon} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer I\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer II\" sonstiges={3} inventory={Inventory_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"WC\" sonstiges={3} inventory={Inventory_WC} open={props.open}/>\r\n               <Zimmer name=\"GÃ¤ste-WC\" sonstiges={3} inventory={Inventory_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Abstellraum\" sonstiges={3} inventory={Inventory_Abstellraum} open={props.open}/>\r\n               <Zimmer name=\"Keller\" sonstiges={3} inventory={Inventory_Keller}  open={props.open}/>\r\n           </>\r\n    );\r\n}\r\n","import './App.css';\nimport * as React from \"react\";\nimport {useReducer, useRef} from \"react\";\nimport ReactToPrint from 'react-to-print';\nimport ButtonAppBar from \"./components/AppBar\";\nimport Schluessel from \"./components/Schluessel\";\nimport ProtokollKopf from \"./components/ProtokollKopf\";\nimport Signature from \"./components/Signature\";\nimport ZimmerListe from \"./components/ZimmerListe\";\nimport Button from \"@mui/material/Button\";\nimport {PrintOutlined} from \"@mui/icons-material\";\nimport {dataReducer, HeaderContext, headerContextData, HeaderDispatchContext} from \"./components/HeaderContext\";\n\n\nexport function PrintApp() {\n\n    const componentRef = useRef();\n\n    const [headerData, dispatch] = useReducer(dataReducer, headerContextData);\n\n\n    return (\n        <div>\n            <HeaderContext.Provider value={headerData}>\n                <HeaderDispatchContext.Provider value={dispatch}>\n                    <App ref={componentRef}/>\n                    <ReactToPrint content={() => componentRef.current}\n                                  trigger={() => {\n                                      return <div style={{display: 'flex', alignItems: 'center', marginBottom: '10px'}}>\n                                          <Button sx={{m: 2}} variant=\"contained\" fullWidth={true}\n                                                  startIcon={<PrintOutlined/>}>Drucken</Button>\n                                      </div>;\n                                  }}\n                    />\n                </HeaderDispatchContext.Provider>\n            </HeaderContext.Provider>\n        </div>\n    );\n}\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        console.log(\"App open \" + this.props.open);\n    }\n\n    render() {\n        return (\n            <div>\n                <ButtonAppBar/>\n                <ProtokollKopf/>\n                <Schluessel/>\n                <ZimmerListe open={this.props.open}/>\n                <Signature/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {PrintApp} from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <PrintApp />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
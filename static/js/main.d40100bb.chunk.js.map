{"version":3,"sources":["components/AppBar.js","components/Schluessel.js","components/ProtokollKopf.js","components/SignatureBox.js","components/Signature.js","components/Inventar.js","components/WebcamDialog.js","components/ImageGrid.js","components/Zimmer.js","components/ZimmerListe.js","App.js","index.js"],"names":["version","ButtonAppBar","props","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","anchorEl","setAnchorEl","handleClose","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","mr","onClick","event","currentTarget","MenuIcon","Menu","id","onClose","MenuListProps","aria-labelledby","MenuItem","Typography","variant","component","Schluessel","Paper","p","m","display","flexDirection","maxWidth","elevation","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","label","required","fullWidth","type","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","House","DoorFront","MarkunreadMailbox","ElectricalServices","ProtokollKopf","name","autoComplete","SignatureBox","sigRef","useRef","createElement","width","background","SignatureCanvas","penColor","ref","canvasProps","height","border","onEnd","style","alignItems","justifyContent","DeleteOutline","current","clear","paddingTop","Signature","md","title","labels","1","2","3","4","5","Inventar","value","setValue","setLabel","_React$useState5","_React$useState6","alertMessage","setAlertMessage","icon","FiberManualRecord","fontSize","Alert","severity","padding","iten","readOnly","onChange","target","checkFunction","concat","Rating","precision","defaultValue","emptyIcon","newValue","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","WebcamDialog","_ref","_ref$open","onCapture","webcamRef","_useState","useState","_useState2","selectedCamera","setSelectedCamera","_useState3","_useState4","cameras","setCameras","useEffect","_ref2","_asyncToGenerator","_callee","devices","videoDevices","deviceIds","_context","navigator","mediaDevices","enumerateDevices","map","device","console","log","filter","kind","deviceId","t0","apply","arguments","getCameras","Dialog","DialogContent","newCamera","indexOf","Cameraswitch","CloseIcon","Webcam","audio","screenshotFormat","videoConstraints","DialogActions","Button","imageSrc","getScreenshot","disabled","startIcon","PhotoCameraIcon","ImageGrid","openDialog","setOpenDialog","images","setImages","gridRef","handleResize","gridTemplateColumns","window","addEventListener","removeEventListener","image","prevImages","_toConsumableArray","gap","index","src","alt","updatedImages","splice","deleteImage","bottom","left","backgroundColor","borderRadius","DeleteIcon","Inventar_Zimmer","Inventar_GÃ¤ste_WC","Inventar_WC","Inventar_Balkon","Inventar_Keller","Zimmer","inventar","setInventar","showComment","setShowComment","_React$useState7","_React$useState8","showDialog","setShowDialog","inventarListe","containsInventar","element","setInventarValue","localList","handleClick","tmpInventar","paddingLeft","Visibility","VisibilityOff","Gradient","FormGroup","FormControlLabel","control","Switch","marginLeft","set","AddCircle","marginRight","EditNote","Camera","multiline","rows","ZimmerListe","sonstiges","PrintApp","componentRef","App","ReactToPrint","content","trigger","PrintOutlined","_React$PureComponent","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_createClass","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d40100bb.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Menu, MenuItem} from \"@mui/material\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nconst version = \"0.1.5\";\r\n\r\nexport default function ButtonAppBar(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState( null );\r\n\r\n    const handleClick = (event) => {\r\n        setOpen(true);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2 }}\r\n                        onClick={handleClick}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"basic-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'basic-button',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={handleClose}>Version {version}</MenuItem>\r\n                    </Menu>\r\n\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        Wohnungszustandsprotokoll\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { DoorFront, ElectricalServices, House, MarkunreadMailbox} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\n\r\nexport default function Schluessel() {\r\n    return (\r\n        <React.Fragment>\r\n            <Paper sx={{\r\n                p: 2,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    SchlÃ¼ssel\r\n                </Typography>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"hausschluessel\"\r\n                            label=\"HausschlÃ¼ssel\"\r\n                            required={true}\r\n                            fullWidth={true}\r\n                            type=\"number\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <House />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"wohnungschluessel\"\r\n                            label=\"WohnungschlÃ¼ssel\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <DoorFront />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"briefkastenschluessel\"\r\n                            label=\"Briefkasten\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MarkunreadMailbox />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n\r\n                            id=\"hausanschlussschluessel\"\r\n                            label=\"Hausanschluss\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ElectricalServices />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nexport default function ProtokollKopf() {\r\n    return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Wohnungsdaten\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"wohnung\"\r\n                        name=\"Wohnung\"\r\n                        label=\"Wohnung\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"datum\"\r\n                        name=\"Datum\"\r\n                        label=\"Datum\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"adresseWhg\"\r\n                        name=\"Adresse Wohnung\"\r\n                        label=\"Adresse Wohnung\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"mietername\"\r\n                        name=\"mietername\"\r\n                        label=\"Name Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"neueAdresse\"\r\n                        name=\"neueAdresse\"\r\n                        label=\"Neue Adresse\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <TextField\r\n                        required\r\n                        id=\"email_mieter\"\r\n                        name=\"email_mieter\"\r\n                        label=\"EMail Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"teilneherVermieter\"\r\n                        name=\"vermieter\"\r\n                        label=\"Teilnehmer Vermieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n            </Grid>\r\n            </Paper>\r\n    );\r\n}","import React, {useRef} from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {DeleteOutline} from \"@mui/icons-material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\n\r\n\r\nexport default function SignatureBox() {\r\n\r\n    const sigRef = useRef();\r\n    // const [signature, setSignature] = useState(null);\r\n\r\n    const handleSignatureEnd = () => {\r\n        //setSignature(sigRef.current.toDataURL());\r\n    }\r\n    const clearSignature = () => {\r\n        sigRef.current.clear();\r\n        // setSignature(null);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} width=\"100%\">\r\n                <Paper sx={{\r\n                    background: '#EEE',\r\n                    p: 1,\r\n                    m: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxWidth: \"100%\",\r\n                    elevation: \"2\",\r\n                }}>\r\n                    <SignatureCanvas\r\n                        penColor=\"black\"\r\n                        ref={sigRef}\r\n                        canvasProps={{height: \"200px\", border: \"1px solid black\", color: \"blue\"}}\r\n                        onEnd={handleSignatureEnd}\r\n                    />\r\n                </Paper>\r\n\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <IconButton color=\"primary\" aria-label=\"delete pad\" size=\"large\">\r\n                        <DeleteOutline onClick={clearSignature}/>\r\n                    </IconButton>\r\n                    <Typography variant=\"body1\" gutterBottom sx={{paddingTop: \"0.5em\"}}>\r\n                        Unterschrift Mieter\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};","\r\nimport React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport SignatureBox from \"./SignatureBox\";\r\n\r\n\r\nexport default function Signature() {\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} md={6} width=\"100%\" >\r\n                   <SignatureBox title=\"Unterschrift Mieter\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                    <SignatureBox title=\"Unterschrift Vermieter\" />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n};","import {Alert, Rating} from \"@mui/material\";\r\nimport {FiberManualRecord} from \"@mui/icons-material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst labels = {\r\n    1: 'defekt', 2: 'stark gebraucht', 3: 'gebraucht', 4: 'neuwertig', 5: 'neu',\r\n};\r\n\r\n\r\n/**\r\n * Eine Inventar eines ZimmerListe. Ein Inventar ist z.B. eine TÃ¼r oder eine Steckdose.\r\n * Jees Inventar hat innerhalb des Zimmers einen eindeutigen Namen und einen Wert / Status.\r\n * Dieser Status gibt den Zustand des Inventares an.\r\n *\r\n * @param {Object} props - Property object\r\n * @param {id} props.id - id des Inventares aus der Inventarliste\r\n * @param {id} props.label - der Name des Inventares aus der Inventarliste\r\n * @param {id} props.value - Gebrauchtstatus des Inventars\r\n * @param {id} props.set - Funktion zum setzen eines neuen Wertes set(<id>,<wert>)\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Inventar(props) {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const [label, setLabel] = React.useState(props.label);\r\n    const [alertMessage, setAlertMessage] = React.useState(null);\r\n\r\n    let icon = <FiberManualRecord color=\"white\" fontSize=\"inherit\"/>;\r\n\r\n    function checkLabel(label) {\r\n        if( props.checkFunction(label) ) {\r\n            setAlertMessage(`Das Inventar '${label}' gibt es schon`);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getLabelText() {\r\n        return labels[value] ? label + \" (\" + labels[value] + \")\" : label;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { alertMessage && (<Alert severity=\"error\" onClick={() => setAlertMessage(null)}>{alertMessage}</Alert>) }\r\n\r\n            <Grid container spacing={1} padding={1} width={\"100%\"}>\r\n                <Grid iten xs={8}>\r\n                    <TextField fullWidth={true}\r\n                               sx={{paddingTop: 0}}\r\n                               InputProps={{\r\n                                   readOnly: false,\r\n                               }}\r\n                               onChange={(event) => {\r\n                                   if( checkLabel(event.target.value) )\r\n                                        setLabel(event.target.value);\r\n                               }\r\n                               }\r\n                               value={getLabelText()}\r\n                               variant=\"standard\"/>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Rating\r\n                        name=\"hover-feedback\"\r\n                        value={value}\r\n                        precision={1}\r\n                        defaultValue={0}\r\n\r\n                        icon={icon}\r\n                        emptyIcon={icon}\r\n                        onChange={(event, newValue) => {\r\n                            setValue(newValue)\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>);\r\n}","import React, {useState, useRef, useEffect} from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {Cameraswitch} from \"@mui/icons-material\";\r\n\r\nconst WebcamDialog = ({ open = true, onClose, onCapture }) => {\r\n\r\n\r\n    const webcamRef = useRef(null);\r\n    const [selectedCamera, setSelectedCamera] = useState('');\r\n    const [cameras, setCameras] = useState([]);\r\n\r\n    const handleCapture = () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        onCapture(imageSrc);\r\n    };\r\n\r\n    const handleCameraSwitch = () => {\r\n        if (cameras.length > 1) {\r\n            const newCamera =\r\n                cameras[(cameras.indexOf(selectedCamera) + 1) % cameras.length];\r\n            setSelectedCamera(newCamera);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getCameras = async () => {\r\n            try {\r\n                const devices = await navigator.mediaDevices.enumerateDevices();\r\n                devices.map((device) => { console.log(device.label); return \"\";});\r\n\r\n                const videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n                const deviceIds = videoDevices.map((device) => device.deviceId);\r\n                setCameras(deviceIds);\r\n                console.log(\"Cameras found \" + videoDevices.length );\r\n\r\n                if (videoDevices.length > 0) {\r\n                    setSelectedCamera(videoDevices[0].deviceId);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Fehler beim Abrufen der Kameras:\", error);\r\n            }\r\n        };\r\n\r\n        if (open) {\r\n            getCameras().then();\r\n        }\r\n    }, [open]);\r\n\r\n    console.log(\"WebcamDialog render = \" + open + \" selected? => '\" + selectedCamera + \" Kameras + length: \" + cameras.length);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n            <DialogContent>\r\n                <Grid container spacing={1} padding={1} width={\"100%\"}>\r\n                    <Grid iten xs={6}>\r\n                        {cameras.length > 1 && (\r\n                        <div style={{display: \"flex\", justifyContent: \"left\", width: \"45%\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={handleCameraSwitch}\r\n                            >\r\n                                <Cameraswitch/>\r\n                            </IconButton>\r\n                        </div>\r\n                            )}\r\n                    </Grid>\r\n                    <Grid iten xs={6} alignItems={\"right\"}>\r\n                        <div style={{display: \"flex\", justifyContent: \"right\", width: \"100%\"}}>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                onClick={onClose}\r\n                            >\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                {selectedCamera && (\r\n                    <Webcam\r\n                        audio={false}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        videoConstraints={{\r\n                            deviceId: selectedCamera,\r\n                        }}\r\n                        style={{width: \"100%\"}}\r\n                    />\r\n                )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", width: \"100%\"}}>\r\n                    <Button\r\n                        onClick={handleCapture}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={!selectedCamera}\r\n                        startIcon={<PhotoCameraIcon/>}\r\n                    >\r\n                        Aufnehmen\r\n                    </Button>\r\n                </div>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default WebcamDialog;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport WebcamDialog from \"./WebcamDialog\"; // Importieren Sie Ihre Webcam-Dialog-Komponente hier\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst ImageGrid = () => {\r\n\r\n    const [openDialog, setOpenDialog] = useState(true);\r\n\r\n    const [images, setImages] = useState([]);\r\n    const gridRef = useRef(null);\r\n\r\n    const handleCapture = (image) => {\r\n        setImages((prevImages) => [...prevImages, image]);\r\n    };\r\n\r\n    const deleteImage = (index) => {\r\n        const updatedImages = [...images];\r\n        updatedImages.splice(index, 1);\r\n        setImages(updatedImages);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // Wenn sich die FenstergrÃ¶Ãe Ã¤ndert, berechnen Sie die Anzahl der Bilder pro Zeile basierend auf der Fensterbreite.\r\n        const handleResize = () => {\r\n            const grid = gridRef.current;\r\n            // const containerWidth = grid.offsetWidth;\r\n            const minImageSize = 240; // MindestgrÃ¶Ãe fÃ¼r Bilder\r\n            // const minImagesPerRow = Math.floor(containerWidth / minImageSize);\r\n            grid.style.gridTemplateColumns = `repeat(auto-fit, minmax(${minImageSize}px, 1fr))`;\r\n        };\r\n\r\n        handleResize(); // Initialisieren Sie das Grid basierend auf der aktuellen FenstergrÃ¶Ãe.\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <WebcamDialog open={openDialog} onClose={() => setOpenDialog(false)} onCapture={handleCapture} />\r\n\r\n            <div\r\n                ref={gridRef}\r\n                style={{\r\n                    display: \"grid\",\r\n                    gap: \"10px\",\r\n                }}\r\n            >\r\n                {images.map((image, index) => (\r\n                    <div key={index} style={{ position: \"relative\" }}>\r\n                        <img src={image} alt={`Bild ${index}`} style={{ width: \"100%\" }} />\r\n                        <button\r\n                            onClick={() => deleteImage(index)}\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                bottom: \"10px\",\r\n                                left: \"10px\",\r\n                                backgroundColor: \"white\",\r\n                                padding: \"5px\",\r\n                                borderRadius: \"50%\",\r\n                            }}\r\n                        >\r\n                            <DeleteIcon style={{ color: \"blue\" }} />\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import * as React from \"react\";\r\nimport {useEffect} from \"react\";\r\n\r\nimport {Alert, FormControlLabel, FormGroup, InputAdornment, Switch} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Inventar from \"./Inventar\";\r\nimport {AddCircle, Camera, EditNote, Gradient, Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ImageGrid from \"./ImageGrid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nexport const Inventar_Zimmer = [\"TÃ¼r\", \"TÃ¼rzarge\", \"Wand\", \"Boden\", \"FuÃleisten\", \"Decke\", \"Steckdosen\", \"Schalter\", \"Heizung\",\r\n    \"Fenster\"];\r\n\r\nexport const Inventar_GÃ¤ste_WC = [...Inventar_Zimmer, \"WC-Sitz\", \"WC\", \"SpÃ¼lkasten\", \"Waschbecken\", \"Wasserhahn\", \"Toilettenpapierhalter\", \"Spiegel\"];\r\n\r\nexport const Inventar_WC = [...Inventar_GÃ¤ste_WC, \"Duschtrennwand\", \"Duschvorhang\", \"Badewanne\", \"Badewannenarmatur\"];\r\n\r\nexport const Inventar_Balkon = [\"Boden\", \"Decke\", \"WÃ¤nde\", \"Glas\", \"Fenster\", \"Oberlicht\"];\r\n\r\nexport const Inventar_Keller = [\"TÃ¼r\", \"Boden\", \"Schalter\", \"Steckdose\", \"Fenster\"];\r\n\r\n\r\n/**\r\n *\r\n * @param props.inventarListe {[string]} Liste des Inventars in dem Zimmer\r\n *         Ein InventarElement hat die Attribute id, label, value\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Zimmer(props) {\r\n\r\n    const [inventar, setInventar] = React.useState([]);\r\n    // Darstellung des InventarDialogs\r\n    const [open, setOpen] = React.useState(true);\r\n    const [showComment, setShowComment] = React.useState(false);\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n\r\n\r\n    let inventarListe = props.inventarListe;\r\n\r\n    // initialisiere Inventar\r\n    useEffect(() => {\r\n            if (inventarListe.length > 0) {\r\n                let tmpInventar = [];\r\n                for (let i = 0; i < inventarListe.length; i++) {\r\n                    tmpInventar = tmpInventar.concat({label: inventarListe[i], value: 0, id: i});\r\n                }\r\n                setInventar(tmpInventar);\r\n            }\r\n        }\r\n        , []);\r\n\r\n    function containsInventar( label ) {\r\n        for( let element in inventarListe ) {\r\n            if( element.label === label )\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function addElement() {\r\n        let tmpInventar = [...inventar];\r\n        tmpInventar = tmpInventar.concat({id: tmpInventar.length, label: '', value: 0});\r\n        setInventar(tmpInventar);\r\n    }\r\n\r\n    function setInventarValue(id, label, value) {\r\n        console.log(`setInventarValue: ${id}, ${label}, ${value},`);\r\n        let localList = [...inventar];\r\n        localList[id] = {label: label, value: value};\r\n        localList[id] = {label, value};\r\n        setInventar(localList);\r\n    }\r\n\r\n    function handleClick() {\r\n        setOpen(!open);\r\n    }\r\n\r\n    console.log(\"Zimmer: \" + props.name + \" open \" + open);\r\n    if (open === false)\r\n        return (\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Grid container spacing={1} paddingLeft={1}>\r\n                    <Grid item xs={11}> <Typography variant=\"h6\">{props.name} (nicht relevant)</Typography></Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleClick}><Visibility/></IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n        )\r\n    else\r\n        return (\r\n\r\n\r\n            <Paper sx={{\r\n                p: 1,\r\n                m: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n\r\n                <Grid container spacing={1} paddingLeft={1} alignItems=\"center\">\r\n                    <Grid item xs={11}> <Typography variant=\"h6\">{props.name}</Typography></Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleClick}><VisibilityOff/></IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TextField id=\"heizungszÃ¤hler\" label=\"HeizungszÃ¤hler\" required={true}\r\n                                   fullWidth={true} type=\"text\"\r\n                                   InputLabelProps={{\r\n                                       shrink: true,\r\n                                   }}\r\n                                   InputProps={{\r\n                                       startAdornment: (\r\n                                           <InputAdornment position=\"start\">\r\n                                               <Gradient/>\r\n                                           </InputAdornment>\r\n                                       ),\r\n                                   }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <FormGroup><FormControlLabel control={<Switch/>}\r\n                                                     label=\"SchlÃ¼ssel\"/></FormGroup>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{p: 0, marginLeft: 1, m: 1}}> {\r\n                    inventar.map((element, index) => {\r\n                        return (\r\n                            <Inventar id={index} label={element.label} set={setInventarValue} checkFunction={containsInventar}/>\r\n                        )\r\n                    })\r\n                }\r\n                </Box>\r\n                <Box sx={{m: 1}}>\r\n                    <Button startIcon={<AddCircle/>} sx={{marginRight: 1}}\r\n                            onClick={addElement}>\r\n                        Inventar\r\n                    </Button>\r\n                    <Button startIcon={<EditNote/>} sx={{marginRight: 1}}\r\n                            onClick={() => setShowComment(!showComment)}>\r\n                        Hinweise\r\n                    </Button>\r\n                    <Button  onClick={() => {\r\n                        setShowDialog(true)\r\n                    }}\r\n                            startIcon={<Camera/>}\r\n                    > Fotos </Button>\r\n                </Box>\r\n                <Box sx={{m: 1}}>\r\n                    {showComment && (<TextField fullWidth multiline rows={3} label=\"Hinweistext\"></TextField>)}\r\n                </Box>\r\n\r\n                {showDialog && (<ImageGrid/>)}\r\n\r\n            </Paper>\r\n\r\n        );\r\n\r\n}","\r\nimport * as React from \"react\";\r\nimport Zimmer, {Inventar_Balkon, Inventar_GÃ¤ste_WC, Inventar_Keller, Inventar_WC, Inventar_Zimmer} from \"./Zimmer\";\r\n\r\nexport default function ZimmerListe(props) {\r\n\r\n\r\n    return (\r\n           <>\r\n               <Zimmer name=\"Flur\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"KÃ¼che\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Wohnzimmer\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Balkon/ Loggia\" sonstiges={3} inventarListe={Inventar_Balkon} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer I\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer II\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"WC\" sonstiges={3} inventarListe={Inventar_WC} open={props.open}/>\r\n               <Zimmer name=\"GÃ¤ste-WC\" sonstiges={3} inventarListe={Inventar_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Abstellraum\" sonstiges={3} inventarListe={Inventar_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Keller\" sonstiges={3} inventarListe={Inventar_Keller}  open={props.open}/>\r\n           </>\r\n    );\r\n}\r\n","import './App.css';\nimport * as React from \"react\";\nimport {useRef} from \"react\";\nimport ReactToPrint from 'react-to-print';\nimport ButtonAppBar from \"./components/AppBar\";\nimport Schluessel from \"./components/Schluessel\";\nimport Box from \"@mui/material/Box\";\nimport ProtokollKopf from \"./components/ProtokollKopf\";\nimport Signature from \"./components/Signature\";\nimport ZimmerListe from \"./components/ZimmerListe\";\nimport Button from \"@mui/material/Button\";\nimport {PrintOutlined} from \"@mui/icons-material\";\n\n\nexport function PrintApp() {\n\n    const componentRef = useRef();\n\n    return (\n        <div>\n            <App ref={componentRef} />\n\n            <ReactToPrint content={() => componentRef.current }\n\n                          trigger={() => {\n                              return <Box sx={{p: 1}}> <Button variant=\"contained\" fullWidth={true}\n                                                               startIcon={<PrintOutlined/>}>Drucken</Button></Box>;\n                          }}\n            />\n\n        </div>\n    );\n}\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        console.log(\"App open \" + this.props.open);\n    }\n\n    render() {\n        return (\n            <div>\n                <ButtonAppBar/>\n                <ProtokollKopf/>\n                <Schluessel/>\n                <ZimmerListe open={this.props.open}/>\n                <Signature/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {PrintApp} from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <PrintApp />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/AppBar.js","components/Schluessel.js","components/ProtokollKopf.js","components/SignatureBox.js","components/Signature.js","components/Inventar.js","components/WebcamDialog.js","components/ImageGrid.js","components/Zimmer.js","components/ZimmerListe.js","App.js","index.js"],"names":["ButtonAppBar","props","React","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","Schluessel","Paper","p","display","flexDirection","maxWidth","elevation","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","id","label","required","fullWidth","type","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","House","DoorFront","MarkunreadMailbox","ElectricalServices","ProtokollKopf","name","autoComplete","SignatureBox","sigRef","useRef","_useState","useState","_useState2","_slicedToArray","setSignature","createElement","width","direction","alignItems","margin","padding","IconButton","color","aria-label","size","DeleteOutline","onClick","current","clear","SignatureCanvas","penColor","canvasProps","className","ref","onEnd","toDataURL","Signature","title","labels","1","2","3","4","5","Inventar","_React$useState","_React$useState2","value","setValue","readonly","console","log","paddingTop","paddingBottom","Assignment","iten","readOnly","onChange","event","newValue","set","retValue","getLabelText","Rating","precision","defaultValue","icon","FiberManualRecord","fontSize","emptyIcon","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","WebcamDialog","_ref","_ref$open","open","onClose","onCapture","webcamRef","selectedCamera","setSelectedCamera","_useState3","_useState4","setCameras","useEffect","_ref2","_asyncToGenerator","_callee","devices","videoDevices","deviceIds","_context","navigator","mediaDevices","enumerateDevices","filter","device","kind","map","deviceId","t0","apply","arguments","getCameras","Dialog","DialogContent","style","justifyContent","edge","CloseIcon","Webcam","audio","screenshotFormat","videoConstraints","DialogActions","Button","imageSrc","getScreenshot","disabled","startIcon","PhotoCameraIcon","ImageGrid","openDialog","setOpenDialog","setCapturedImage","_useState5","_useState6","images","setImages","gridRef","handleResize","grid","containerWidth","offsetWidth","Math","floor","gridTemplateColumns","concat","window","addEventListener","removeEventListener","image","prevImages","_toConsumableArray","gap","index","src","alt","updatedImages","splice","deleteImage","bottom","left","backgroundColor","borderRadius","DeleteIcon","Camera","Inventar_Zimmer","Inventar_GÃ¤ste_WC","Inventar_WC","Inventar_Balkon","Inventar_Keller","Zimmer","inventar","setInventar","_React$useState3","_React$useState4","setOpen","inventarListe","sonstiges","setInventarValue","localList","handleClick","e","Divider","paddingLeft","Visibility","VisibilityOff","Gradient","FormGroup","FormControlLabel","control","Switch","element","m","multiline","rows","ZimmerListe","PrintApp","componentRef","App","ReactToPrint","content","trigger","PrintOutlined","_React$PureComponent","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_createClass","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c610db08.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nexport default function ButtonAppBar(props) {\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        Wohnungszustandsprotokoll\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { DoorFront, ElectricalServices, House, MarkunreadMailbox} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\n\r\nexport default function Schluessel() {\r\n    return (\r\n        <React.Fragment>\r\n            <Paper sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    SchlÃ¼ssel\r\n                </Typography>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"hausschluessel\"\r\n                            label=\"HausschlÃ¼ssel\"\r\n                            required={true}\r\n                            fullWidth={true}\r\n                            type=\"number\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <House />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"wohnungschluessel\"\r\n                            label=\"WohnungschlÃ¼ssel\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <DoorFront />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"briefkastenschluessel\"\r\n                            label=\"Briefkasten\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MarkunreadMailbox />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n\r\n                            id=\"hausanschlussschluessel\"\r\n                            label=\"Hausanschluss\"\r\n                            required={true}\r\n                            type=\"number\"\r\n                            fullWidth={true}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ElectricalServices />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nexport default function ProtokollKopf() {\r\n    return (\r\n            <Paper sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                maxWidth: \"100%\",\r\n                elevation: \"2\",\r\n            }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Wohnungsdaten\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"wohnung\"\r\n                        name=\"Wohnung\"\r\n                        label=\"Wohnung\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"datum\"\r\n                        name=\"Datum\"\r\n                        label=\"Datum\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"mietername\"\r\n                        name=\"mietername\"\r\n                        label=\"Name Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <TextField\r\n                        required\r\n                        id=\"email_mieter\"\r\n                        name=\"email_mieter\"\r\n                        label=\"EMail Mieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"vermieter\"\r\n                        name=\"vermieter\"\r\n                        label=\"Vermieter\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                    />\r\n                </Grid>\r\n\r\n            </Grid>\r\n            </Paper>\r\n    );\r\n}","import React, {useRef, useState} from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {DeleteOutline} from \"@mui/icons-material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\n\r\n\r\nexport default function SignatureBox( props ) {\r\n\r\n    const sigRef = useRef();\r\n    const [signature, setSignature] = useState(null);\r\n\r\n    const handleSignatureEnd = () => {\r\n        setSignature(sigRef.current.toDataURL());\r\n    }\r\n    const clearSignature = () => {\r\n        sigRef.current.clear();\r\n        setSignature(null);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} width=\"100%\">\r\n                <Paper sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxWidth: \"100%\",\r\n                    elevation: \"2\",\r\n                }}>\r\n                    <Grid container spacing={0} direction=\"row\" alignItems=\"baseline\" margin={0}>\r\n                        <Grid item xs={3} padding={0} >\r\n                            <IconButton color=\"primary\" aria-label=\"delete pad\" size=\"large\">\r\n                                <DeleteOutline onClick={clearSignature}/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Typography variant=\"body1\" gutterBottom>\r\n                                Unterschrift Mieter\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <SignatureCanvas\r\n                        penColor=\"black\"\r\n                        canvasProps={{className: 'signature'}}\r\n                        ref={sigRef}\r\n                        onEnd={handleSignatureEnd}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};","import Paper from \"@mui/material/Paper\";\r\n\r\nimport React, {useRef, useState} from \"react\";\r\nimport SignatureCanvas from 'react-signature-canvas'\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {DeleteOutline} from \"@mui/icons-material\";\r\nimport SignatureBox from \"./SignatureBox\";\r\n\r\nfunction DeleteIcon() {\r\n    return null;\r\n}\r\n\r\nexport default function Signature() {\r\n\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} sm={6} width=\"100%\" >\r\n                   <SignatureBox title=\"Unterschrift Mieter\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n                    <SignatureBox title=\"Unterschrift Vermieter\" />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n};","import {Rating} from \"@mui/material\";\r\nimport {Assignment, FiberManualRecord} from \"@mui/icons-material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\n\r\nconst labels = {\r\n    1: 'defekt', 2: 'stark gebraucht', 3: 'gebraucht', 4: 'neuwertig', 5: 'neu',\r\n};\r\n\r\n/**\r\n * Eine Inventar eines ZimmerListe. Ein Inventar ist z.B. eine TÃ¼r oder eine Steckdose.\r\n * Jees Inventar hat innerhalb des Zimmers einen eindeutigen Namen und einen Wert / Status.\r\n * Dieser Status gibt den Zustand des Inventares an.\r\n *\r\n * @param {Object} props - Property object\r\n * @param {id} props.id - id des Inventares aus der Inventarliste\r\n * @param {id} props.label - der Name des Inventares aus der Inventarliste\r\n * @param {id} props.value - Gebrauchtstatus des Inventars\r\n * @param {id} props.set - Funktion zum setzen eines neuen Wertes set(<id>,<wert>)\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Inventar(props) {\r\n\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    function newLabel( label ) {\r\n        props.set( props.id, label, props.value);\r\n    }\r\n\r\n    function getLabelText()  {\r\n        let retValue = \"\";\r\n        if( labels[value] )\r\n            retValue = props.label + \" (\" + labels[value] + \")\";\r\n        else\r\n            retValue = props.label ;\r\n\r\n        console.log(retValue);\r\n        return retValue;\r\n    }\r\n\r\n    // wenn das Textfeld keinen Wert hat, dann kann dieser eingegeben werden. Ansonsten ist\r\n    // der Wert/ Name des Textfeldes fest definiert\r\n    let readonly = props.label !== \"\";\r\n\r\n    console.log(\"redraw\");\r\n\r\n    return (<>\r\n        <Grid container spacing={2} paddingTop={1} paddingBottom={2} >\r\n            <Grid item xs={1}><Assignment /></Grid>\r\n            <Grid iten xs={8}>\r\n                <TextField fullWidth={true}\r\n                           sx={{paddingTop: 1}}\r\n                           InputProps={{\r\n                               readOnly: readonly,\r\n                           }}\r\n                           onChange={(event, newValue) => {\r\n                               newLabel(newValue);\r\n                           }}\r\n                           value={getLabelText()}\r\n                           variant=\"standard\" />\r\n            </Grid>\r\n            <Grid  item xs={3}  >\r\n                <Rating\r\n                    name=\"hover-feedback\"\r\n                    value={value}\r\n                    precision={1}\r\n                    defaultValue={0}\r\n\r\n                    icon={<FiberManualRecord fontSize=\"inherit\" />}\r\n\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue)\r\n                    }}\r\n                    emptyIcon={<FiberManualRecord fontSize=\"inherit\" />}\r\n                />\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    </>);\r\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\";\r\n\r\nconst WebcamDialog = ({ open = true, onClose, onCapture }) => {\r\n\r\n\r\n    const webcamRef = useRef(null);\r\n    const [selectedCamera, setSelectedCamera] = useState(\"\");\r\n    const [cameras, setCameras] = useState([]);\r\n\r\n    const handleCapture = () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        onCapture(imageSrc);\r\n    };\r\n\r\n    const handleCameraSwitch = () => {\r\n        if (cameras.length > 1) {\r\n            const newCamera =\r\n                cameras[(cameras.indexOf(selectedCamera) + 1) % cameras.length];\r\n            setSelectedCamera(newCamera);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getCameras = async () => {\r\n            try {\r\n                const devices = await navigator.mediaDevices.enumerateDevices();\r\n                const videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n                const deviceIds = videoDevices.map((device) => device.deviceId);\r\n                setCameras(deviceIds);\r\n                if (deviceIds.length > 0) {\r\n                    setSelectedCamera(deviceIds[0]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Fehler beim Abrufen der Kameras:\", error);\r\n            }\r\n        };\r\n\r\n        if (open) {\r\n            getCameras();\r\n        }\r\n    }, [open]);\r\n\r\n    console.log(\"WebcamDialog render = \" + open);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n            <DialogContent>\r\n                <div style={{ display: \"flex\", justifyContent: \"right\", width: \"100%\" }}>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n                </div>\r\n                {selectedCamera && (\r\n                    <Webcam\r\n                        audio={false}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        videoConstraints={{\r\n                            deviceId: selectedCamera,\r\n                        }}\r\n                        style={{ width: \"100%\" }}\r\n                    />\r\n                )}\r\n            </DialogContent>\r\n            <DialogActions >\r\n                <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}>\r\n                    <Button\r\n                        onClick={handleCapture}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={!selectedCamera}\r\n                        startIcon={<PhotoCameraIcon />}\r\n                    >\r\n                        Aufnehmen\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default WebcamDialog;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport WebcamDialog from \"./WebcamDialog\"; // Importieren Sie Ihre Webcam-Dialog-Komponente hier\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Camera} from \"@mui/icons-material\"; // Importieren Sie das LÃ¶schen-Icon\r\n\r\nconst ImageGrid = () => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [capturedImage, setCapturedImage] = useState(null);\r\n    const [images, setImages] = useState([]);\r\n    const gridRef = useRef(null);\r\n\r\n    const handleCapture = (image) => {\r\n        setCapturedImage(image);\r\n        setImages((prevImages) => [...prevImages, image]);\r\n    };\r\n\r\n    const deleteImage = (index) => {\r\n        const updatedImages = [...images];\r\n        updatedImages.splice(index, 1);\r\n        setImages(updatedImages);\r\n    };\r\n\r\n    const showCamera = () => {\r\n        setOpenDialog(!openDialog);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // FÃ¼gen Sie hier optionalen Code hinzu, um Bilder aus verschiedenen Quellen oder APIs abzurufen und sie zum Grid hinzuzufÃ¼gen.\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Wenn sich die FenstergrÃ¶Ãe Ã¤ndert, berechnen Sie die Anzahl der Bilder pro Zeile basierend auf der Fensterbreite.\r\n        const handleResize = () => {\r\n            const grid = gridRef.current;\r\n            const containerWidth = grid.offsetWidth;\r\n            const minImageSize = 240; // MindestgrÃ¶Ãe fÃ¼r Bilder\r\n            const minImagesPerRow = Math.floor(containerWidth / minImageSize);\r\n            grid.style.gridTemplateColumns = `repeat(auto-fit, minmax(${minImageSize}px, 1fr))`;\r\n        };\r\n\r\n        handleResize(); // Initialisieren Sie das Grid basierend auf der aktuellen FenstergrÃ¶Ãe.\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <WebcamDialog open={openDialog} onClose={() => setOpenDialog(false)} onCapture={handleCapture} />\r\n\r\n            <div\r\n                ref={gridRef}\r\n                style={{\r\n                    display: \"grid\",\r\n                    gap: \"10px\",\r\n                }}\r\n            >\r\n                {images.map((image, index) => (\r\n                    <div key={index} style={{ position: \"relative\" }}>\r\n                        <img src={image} alt={`Bild ${index}`} style={{ width: \"100%\" }} />\r\n                        <button\r\n                            onClick={() => deleteImage(index)}\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                bottom: \"10px\",\r\n                                left: \"10px\",\r\n                                backgroundColor: \"white\",\r\n                                padding: \"5px\",\r\n                                borderRadius: \"50%\",\r\n                            }}\r\n                        >\r\n                            <DeleteIcon style={{ color: \"blue\" }} />\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <Button\r\n                variant={\"contained\"}\r\n                onClick={showCamera}\r\n                startIcon={<Camera/>}\r\n            >\r\n                Fotos\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import * as React from \"react\";\r\n\r\nimport {Divider, FormControlLabel, FormGroup, InputAdornment, Switch} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Inventar from \"./Inventar\";\r\nimport {Delete, Gradient, Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ImageGrid from \"./ImageGrid\";\r\n\r\n\r\nexport const Inventar_Zimmer = [\"TÃ¼r\", \"TÃ¼rzarge\", \"Wand\", \"Boden\", \"FuÃleisten\", \"Decke\", \"Steckdosen\", \"Schalter\", \"Heizung\",\r\n    \"Fenster\"];\r\n\r\nexport const Inventar_GÃ¤ste_WC = [...Inventar_Zimmer, \"WC-Sitz\", \"WC\", \"SpÃ¼lkasten\", \"Waschbecken\", \"Wasserhahn\", \"Toilettenpapierhalter\", \"Spiegel\"];\r\n\r\nexport const Inventar_WC = [...Inventar_GÃ¤ste_WC, \"Duschtrennwand\", \"Duschvorhang\", \"Badewanne\", \"Badewannenarmatur\"];\r\n\r\nexport const Inventar_Balkon = [\"Boden\", \"Decke\", \"WÃ¤nde\", \"Glas\", \"Fenster\", \"Oberlicht\"];\r\n\r\nexport const Inventar_Keller = [\"TÃ¼r\", \"Boden\", \"Schalter\", \"Steckdose\", \"Fenster\"];\r\n\r\n\r\n/**\r\n *\r\n * @param schlÃ¼ssel {boolean} gibt an ob der Raum einen SchlÃ¼ssel hat\r\n * @param heizungszÃ¤hler {boolean} gibt an ob der Raum eine Heizung hat\r\n * @param inventarListe {array} Liste des Inventars, dass kontrolliert werden soll\r\n * @param sonstiges {number} Anzahl der Zusatzfelder\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function Zimmer(props) {\r\n\r\n    const [inventar, setInventar] = React.useState([]);\r\n    // Darstellung des InventarDialogs\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    let inventarListe = props.inventarListe;\r\n    let sonstiges = props.sonstiges;\r\n\r\n    // Sortieren des Array.\r\n    for (let i = 0; i < sonstiges; i++)\r\n        inventarListe = inventarListe.concat(['']);\r\n\r\n    // initialisiere Inventar\r\n    if (inventar.length === 0) {\r\n        for (let i = 0; i < inventarListe.length; i++) {\r\n            inventar[i] = {label: inventarListe[i], value: 0};\r\n        }\r\n    }\r\n\r\n    function setInventarValue(id, label, value) {\r\n        console.log(\"setInventarValue \" + id + \" \" + \"label \" + value);\r\n        let localList = [...inventar];\r\n        localList[id] = {label: label, value: value};\r\n        localList[id] = {label, value};\r\n        setInventar(localList);\r\n    }\r\n\r\n    function handleClick(e) {\r\n        setOpen(!open);\r\n    }\r\n\r\n    console.log(\"Zimmer: \" + props.name + \" open \" + open);\r\n    if (open === false)\r\n        return (\r\n            <>\r\n                <Divider/>\r\n                <Grid container spacing={3} paddingTop={1} paddingLeft={1} paddingBottom={2}>\r\n                    <Grid item xs={11}> <Typography variant=\"h6\">{props.name}</Typography></Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleClick}><Visibility/></IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    else\r\n        return (\r\n            <>\r\n                <Divider className=\"page-break\"/>\r\n                <Grid container spacing={3} paddingTop={1} paddingLeft={1} paddingBottom={2} alignItems=\"center\">\r\n                    <Grid item xs={11}> <Typography variant=\"h6\">{props.name}</Typography></Grid>\r\n                    <Grid item xs={1}>\r\n                        <IconButton color=\"primary\" onClick={handleClick}><VisibilityOff/></IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField id=\"heizungszÃ¤hler\" label=\"HeizungszÃ¤hler\" required={true}\r\n                                   fullWidth={true} type=\"text\"\r\n                                   InputLabelProps={{\r\n                                       shrink: true,\r\n                                   }}\r\n                                   InputProps={{\r\n                                       startAdornment: (\r\n                                           <InputAdornment position=\"start\">\r\n                                               <Gradient/>\r\n                                           </InputAdornment>\r\n                                       ),\r\n                                   }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormGroup><FormControlLabel control={<Switch/>}\r\n                                                     label=\"SchlÃ¼ssel\"/></FormGroup>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{p: \"2\"}}>\r\n                    {inventar.map((element, index) => {\r\n                        return (\r\n                            <Inventar id={index} label={element.label} set={setInventarValue}/>\r\n                        )\r\n                    })\r\n                    }\r\n                </Box>\r\n                <Divider/>\r\n                <Box sx={{m: 1}}>\r\n                    <TextField fullWidth multiline rows={3} label=\"Zusatzinformationen\"></TextField>\r\n                </Box>\r\n                <Box sx={{m: 1}}>\r\n                    <ImageGrid></ImageGrid>\r\n                </Box>\r\n\r\n            </>\r\n\r\n        );\r\n\r\n}","\r\nimport * as React from \"react\";\r\nimport Zimmer, {Inventar_Balkon, Inventar_GÃ¤ste_WC, Inventar_Keller, Inventar_WC, Inventar_Zimmer} from \"./Zimmer\";\r\n\r\nexport default function ZimmerListe(props) {\r\n\r\n\r\n    return (\r\n           <>\r\n               <Zimmer name=\"Flur\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"KÃ¼che\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Wohnzimmer\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Balkon/ Loggia\" sonstiges={3} inventarListe={Inventar_Balkon} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer I\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"Kinderzimmer II\" sonstiges={3} inventarListe={Inventar_Zimmer} open={props.open}/>\r\n               <Zimmer name=\"WC\" sonstiges={3} inventarListe={Inventar_WC} open={props.open}/>\r\n               <Zimmer name=\"GÃ¤ste-WC\" sonstiges={3} inventarListe={Inventar_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Abstellraum\" sonstiges={3} inventarListe={Inventar_GÃ¤ste_WC} open={props.open}/>\r\n               <Zimmer name=\"Keller\" sonstiges={3} inventarListe={Inventar_Keller}  open={props.open}/>\r\n           </>\r\n    );\r\n}\r\n","import './App.css';\nimport * as React from \"react\";\nimport {useRef, useState} from \"react\";\nimport ReactToPrint from 'react-to-print';\nimport ButtonAppBar from \"./components/AppBar\";\nimport Schluessel from \"./components/Schluessel\";\nimport Box from \"@mui/material/Box\";\nimport ProtokollKopf from \"./components/ProtokollKopf\";\nimport Signature from \"./components/Signature\";\nimport ZimmerListe from \"./components/ZimmerListe\";\nimport Button from \"@mui/material/Button\";\nimport {PrintOutlined} from \"@mui/icons-material\";\n\n\nexport function PrintApp() {\n\n    const componentRef = useRef();\n\n    return (\n        <div>\n            <App ref={componentRef} />\n\n            <ReactToPrint content={() => componentRef.current }\n\n                          trigger={() => {\n                              return <Box sx={{p: 1}}> <Button variant=\"contained\" fullWidth={true}\n                                                               startIcon={<PrintOutlined/>}>Drucken</Button></Box>;\n                          }}\n            />\n\n        </div>\n    );\n}\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        console.log(\"App open \" + this.props.open);\n    }\n\n    render() {\n        return (\n            <div>\n                <ButtonAppBar/>\n                <Box sx={{p: 1}}>\n                    <ProtokollKopf/>\n                </Box>\n                <Box sx={{p: 1}}>\n                    <Schluessel/>\n                </Box>\n                <Box sx={{p: 1}}>\n                    <ZimmerListe open={this.props.open}/>\n                </Box>\n                <Box sx={{p: 1}}>\n                    <Signature/>\n                </Box>\n\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App, {PrintApp} from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <PrintApp />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}